

import { MenuItemVO, Newmenuitem } from "../vo/menu-item.vo";

export const MENU_LIST_DATA: Array<MenuItemVO> = [{
  id: 1,
  url: 'lesson/learn-html',
  label: 'Learn HTML',
  lessonTitle: 'HTML Tutorial',
  lessonType: 'HTML',
  lessonDescription: 'The language for building web pages',
  
}, {
  id: 2,
  url: 'lesson/learn-css',
  label: 'Learn CSS',
  lessonTitle: 'CSS Tutorial',
  lessonType: 'CSS',
  lessonDescription: 'The language for styling web pages',
  
}, {
  id: 3,
  url: 'lesson/learn-bootstrap',
  label: 'Learn Bootstrap',
  lessonTitle: 'Bootstrap Tutorial',
  lessonType: 'Bootstrap',
  lessonDescription: 'Bootstrap 4 is the newest version of Bootstrap, which is the most popular HTML, CSS, and JavaScript framework for developing responsive, mobile-first websites.',
  
}, {
  id: 4,
  url: 'lesson/learn-w3-css',
  label: 'Learn W3.CSS',
  lessonTitle: 'W3.CSS Tutorial',
  lessonType: 'W3.CSS',
  lessonDescription: 'w3.CSS is a modern, responsive, mobile first CSS framework.',
  
}, {
  id: 5,
  url: 'lesson/learn-colors',
  label: 'Learn Colors',
  lessonTitle: 'Colors Tutorial',
  lessonType: 'Colors',
  lessonDescription: 'Colors are displayed combining RED, GREEN, and BLUE light.',
  
}, {
  id: 6,
  url: 'lesson/learn-icons',
  label: 'Learn Icons',
  lessonTitle: 'Icons Tutorial',
  lessonType: 'Icons',
  lessonDescription: 'To insert an icon, add the name of the icon class to any inline HTML element.',
 
}, {
  id: 7,
  url: 'lesson/learn-graphics',
  label: 'Learn Graphics',
  lessonTitle: 'Graphics Tutorial',
  lessonType: 'Graphics',
  lessonDescription: 'Makes your website look beautiful',
 
}, {
  id: 8,
  url: 'lesson/learn-how-to',
  label: 'Learn How To',
  lessonTitle: 'How To Tutorial',
  lessonType: 'How To',
  lessonDescription: 'Code snippets for HTML, CSS and JavaScript.',
 
}, {
  id: 9,
  url: 'lesson/learn-sass',
  label: 'Learn SASS',
  lessonTitle: 'SASS Tutorial',
  lessonType: 'SASS',
  lessonDescription: 'Sass is a CSS pre-processor. Sass reduces repetition of CSS and therefore saves time.',
  
},
{
  id: 10,
  url: 'lesson/learn-Python',
  label: 'Learn Phython',
  lessonTitle: 'Python Tutorial',
  lessonType: 'Python',
  lessonDescription: 'Python is a CSS pre-processor. Sass reduces repetition of CSS and therefore saves time.',
  
}


];

export const New_Menu_Data: Array<Newmenuitem> = [{

  id: 1,
  title: '<h2>1.Installing Python (පයිතන් ස්ථාපිත කිරීම)</h2>',
  Navtitle: 'Installing Python',
  url: 'lesson/learnone-Python',
  content: 'අපි ඉස්සෙල්ලාම බලමු, Python Download කරගන්න හැටි. මේ Programme එකෙන් තමයි, Python ක්‍රමලේඛ (Python codes ) ලියන්නේ.<br>ඉස්සෙල්ලාම ඔයාගේ Web browser එකට ගිහින් , www.python.org කියල type කරන්න.Page එක load උනාට පස්සේ page එකේ වම් පැත්තේ tabs ටිකක් තියෙනවා. එතන තියෙන DOWNLOAD කියන tab එක click කරන්න.<br><br> <img src="assets/imgs/1.PNG" class="img-responsive" width="75%"><br><br>එතන තියෙන python 2.7 windows install එක click කරන්න.<br><br><img src="assets/imgs/2.png" class="img-responsive" width="75%"><br><br>මොකද මම ඔයාට python 2.7 version එකෙනුයි programme ලියන හැටි උගන්වන්නේ. python 3.0 වගේ අලුත් versions තිබුණත් python 2.7 වගෙත් version එකකින් programme ලියන්න දන්නවනම් අලුතෙන් එන ඕනම version එකකින් programme ලිවිමේ හැකියාව අපිට ලැබෙනවා. එක් හරියට මේ වගේ, “පරණ ජාතියක කාර් එකක් එලවන්න දන්නවනම් , අලුත් ජාතියේ කාර් එකක් එලවන එක මහලොකු දෙයක් නෙවෙයි.”<br><hr>හරි දැන් web page එකෙන් දෙන file එක download කරගෙන install කර ගන්න. ඊට පස්සේ ඔයාගේ පරිගණකයේ Start menu එකට ගිහින් All programmes වලට යන්න.<br><br><img src="assets/imgs/Python_Programming_Tutorial_-_1_-_Installing_Python (video x-flv)[12-44-57].JPG" class="img-responsive" width="25%"><br><br> ඊට පස්සේ ඔයාට දකින්න ලැබෙයි , Python 2.6 කියල folder එකක් . ඒ යටතේ ගොඩක් දේවල් තියෙනවා නේද ? ඉස්සෙල්ලාම යන්න , IDLE ( Python GUI ) එකට . ඒක තමයි Python වල අතුරු මුහුණත (Graphical User Interface)<br><br><img src="assets/imgs/3.PNG" class="img-responsive" width="50%"><br><br><hr> හරි දැන් IDLE එක Open වුණා නේද ? මම දැන් කියල දෙන්නම්, IDLE එක පාවිච්චි කරන විදිහ.ඉස්සෙල්ලාම අපි test කරල බලමු IDLE එක වැඩද කියල.print කියල ලියල , උඩුකොමා ඇතුලේ “ Hello World ! ” කියල ලියමු.<br><br><img src="assets/imgs/4.PNG" class="img-responsive" width="50%"><br><br><pre>print "Hello World !"<br>Hello World !</pre>අපිට Python වලින් output එකක් ලැබුනා.<br><hr>Python කියන්නේ ඇත්තටම ගොඩක් ආකර්ෂණීය programme language එකක්. අපිට මේකෙන් ගොඩක් වැඩගන්න පුළුවන්,.ඒ වගේම නූතනයේ බහුලව පාවිච්චි වෙන programme language එකක් තමයි Python කියන්නේ. <hr>',
},
{

  id: 2,
  title: ' <h2>2. Numbers and Maths (සරල ගණිත කර්ම) </h2>',
  Navtitle: 'Numbers and Maths',
  url: 'lesson/learntwo-Python',
  content: 'මේ පාඩමේදි  මම කතා කරන්න යන්නේ Python වල තියෙන සරල ගණිත කර්ම ගැන. <br>Python IDLE එක ඇත්තටම calculator එක විදිහට පාවිච්චි කරන්න පුලුවන්.<br><div class="panel panel-default"><div class="panel-body">2+2=4<br> 6-3=3<br>18/3=6<br><hr>18/7=2<br></div> </div>හරියටම බෙදුනේ නෑ නේද ? <br>නිඛිලයකින් නිඛිලයක් බෙදපුවහම Python වලින් Output එක එන්නේ නිඛිලයකින්ම තමයි. ඒකයි 18/ 7 = 2 එන්න හේතුව.<br>ඒ හින්දා හරියටම 18 / 7 ගන්න නම් දශම තිතත් යොදන්න වෙනවා. එතනොට Python වලිනුත් දෙන්නේ දශමය සමඟ Output එකක්. <br>දශමය තියෙන සංඛ්‍යාවලට Computer Languages වල සාමාන්‍යයෙන් කියන්නේ Floats කියලයි.<br><br><img src="assets/imgs/5.PNG" class="img-responsive" width="50%"><br><br>හරි දැන් පිළිතුරට දශමය එන්න හදනවනම් 18 / 7 කියන එකේ කොහෙට හරි දශම තිතත් තියන්න වෙනවා. අපි ඒ ගැන බලමු.<br><div class="panel panel-default"><div class="panel-body">18.0/7=2.5714285714285716<br></div></div>හරි නේද උත්තරේ ආවා නේද ?<br>ඒ වගේම මෙහෙම කරන්නත් පුලුවන් <br><div class="panel panel-default"><div class="panel-body">18.0/7.0=2.5714285714285716<br>18/7. =2.5714285714285716<br></div></div>මේ‍කෙදි අවශ්‍ය වන්නේ  ගණිතකරණයේ කොහෙට හරි දශමයක් තියෙන එක විතරයි.<br>මේකෙදි තියෙන වැදගත්ම දේ තමයි Python වල නිඛිල සංඛ්‍යා (Integer) හෝ දශමය තියෙන සංඛ්‍යා(Float) අතර ගණිතකර්ම කරද්දී Integer එක Float වලට පරිවර්තනය වෙලා Output එක අවසානයේදී එන්නේ Float වලින්. මේක Python වල තියෙන විශේෂ ලක්ෂණයක්.<br><br><img src="assets/imgs/6.PNG" class="img-responsive" width="75%"><br><br><hr><b><h4>% - Mod (මොඩ්)</h4></b>මේ ගණිත කර්මය ඉතාමත් වැදගත් එකක්. Python වල මෙම ගණිත කර්මය තියෙනවා. මේකෙදි කරන දේ මම පෙන්නන්නම්.<br>අපි, 9 / 4 බෙදමු.<br><br><img src="assets/imgs/7.PNG" class="img-responsive" width="40%"><br><br>මෙන්න ඉතුරු 1 ක් ආවා නේද ? අපි ඒකට <b>ශේෂය (Reminder)</b> කියල කියනවා. <br>මෙන්න මේ ශේෂය තමයි  <b>% - Mod</b> වලින් අපිට Output එක විදිහට දෙන්නේ.<br>8 % 4 මේකෙ ශේෂය 0 නේද ?<br>ඔව් 0 යි.<br>එතකොට 8.75 % 5<br>0.25 හරි නේද ?<br>සාරාංශය ගත්තොත් % එකෙන් අපිට දෙන්නේ යම් සංඛ්‍යාවක් තවත් සංඛ්‍යාවකින් බෙදපුවහම ඉතිරිවන අගයයි.<b>(ශේෂය)</b><br><br><img src="assets/imgs/8.PNG" class="img-responsive" width="40%"><br><br>දැන් අපි බලමු ගුණ කිරීම ගැන<br>6 * 7<br>42<br>අපිට 6 ඒවා 3 ක් ඕන <br>එහෙනම් , 6*6*6<br>216<br>ඒත් ඊටත් වැඩිය ලෙහෙසි ක්‍රමයක් තියෙනවා . ඒක කරන්නේ මෙහෙමයි.<br><div class="panel panel-default"><div class="panel-body">8**3 --> 512<br>5**12 --> 244140625 <br>  			-5**3 --> -625<br></div></div><br><br><img src="assets/imgs/9.PNG" class="img-responsive" width="40%"><br><br><hr>හරි අපි ඉගෙන ගත්ත Python වලින් සරල ගණිතකර්ම කරන හැටි<hr>',

},
{
  id: 3,
  title: '<h2>3. Variables(විචල්‍යයන්)</h2>',
  Navtitle: 'Variables',
  url: 'lesson/learnthree-Python',
  content: '<hr>Python වල හැටියට Variable එකක් කියන්නේ, ඕනම දෙයක්( string , numbers ,.. ආදි ) තාවකාලිකව තැන්පත් කිරීමක් .<br>කොහොමද අපි Variable එකක් හදන්නේ , ඉස්සෙල්ලාම Variable එකේ නම ලියන්න. ඊට පස්සේ එයට කුමකට හෝ සමාන කරන්න.<br><div class="panel panel-default"><div class="panel-body">X =  18 <br></div></div>හරි මේකෙදි  X කියන නම 18ට සමාන කරල තියෙනවා.<br>දැන් Enter එක ඔබන්න.<br>හරි දැන් තාවකාලිකව පරිගණකයේ මතකයට  X =  18ට සමාන වෙනවා. දැන් 18 වෙනුවට අපිට X කියන නම භාවිතා කරන්න පුලුවන්.<br><br><img src="assets/imgs/10.PNG" class="img-responsive" width="40%"><br><br>X +  15 = 33 මම කියපු දේ හරි නේද ?<br><div class="panel panel-default"><div class="panel-body">X**3=  5832<br></div></div>Y =  54 ට සමාන කරමු.<br>හරි දැන් අපිට Variables 2ක් තියෙනවා . මේ දෙකම පාවිච්චි කලොත් <br>X +  Y = 72<br>මේවා ඉතාමත් වැදගත්, අපි හිතමු, නිතරම භාවිතා වෙන දෙයක්, ඒක සාමාන්‍යෙයන් ලොකු අංකයක් කියලා ( 878 වාගේ එකක් ) මේක නිතරම type කරන්න යාම බොරුවට කාලේ නාස්ති කිරීමක්. ඒ නිසා තනි අගයක<br>( Z = 878 වැනි ) සමාන කරගත්තහම ඒක ලේසියෙන් නැවත නැවත භාවිතා කරන්න පුලුවන්.<br>Variable වල තියෙන වැදගත්කම ඔයාලට ඉස්සරහට බලා ගන්න පුලුවන්. <br><hr>අපි නිකන් හිතමු, අපි හදන programme එකකට User ගෙන් Input එකක් ගන්න වෙනවා. ඒක කරන්නේ කොහොමද ? ඇත්තටම ඒක කරන්න මේ Variables පාවිච්චි කරල තමයි. අපි ඒ ගැන බලමු. <br>මේකෙදි Input කියල Function එකක් භාවිතා වෙනවා<br>g = input (“ ”) දෙපැත්තට (  ) වරහන් දාලා ( “...... “ ) උඩු කොමා යටතේ User ට දකින්න ඕන Message එක අපිට ලියන්න පුලුවන්.<br><div class="panel panel-default"><div class="panel-body">g = input (“Enter number here: ”)<br></div></div>දැන් Enter එක ඔබමු. <br><br><img src="assets/imgs/11.PNG" class="img-responsive" width="75%"><br><br>දැන් User දකින Message එක අපිට පේනවා.<br>Enter number here: <br>අපි දැන් 43 කියලා type කරමු.<br>දැන් g = 43 ට සමාන වෙලයි තියෙන්නේ.<br>අපි දැන් බලමු<br><div class="panel panel-default"><div class="panel-body">g + 32 = 75 <br>g**3 =79507<br></div></div>සාරාංශය බැලුවොත්, Variable එකක් අපිට හදන්න පුලුවන්, දැන්. ඒ වගේම User ගෙන් ලැබෙන input එකක් Variable එකකට සමාන කරගන්න පුලුවන්.<br><div class="panel panel-default"><div class="panel-body">(  F = input ( )   )</div></div>',
},
{
  id: 4,
  title: ' <h2>4. Modules and Functions( මොඩියුල සහ ශ්‍රිත)</h2>',
  Navtitle: 'Modules and Functions',
  url: 'lesson/learnfour-Python',
  content: '<hr>සාමාන්‍යයෙන් <b>ක්‍රමලේක භාෂා (Programme Languages)</b> වලට අනුව <b>ස්ථාපිත ශ්‍රිත (Building Function)</b> කියන්නේ  <b>ක්‍රමලේක භාෂාව ලිවීමට ගන්නා මෘදුකාංගය</b> තුලම පිහිටුවනු ලැබූ ක්‍රමලේක වලට.  Python වලටත් මේ දෙය පොදුයි.<br><hr><div class="panel panel-default"><div class="panel-body">5**4= 625<br></div></div>හරි, මේ වැඩේම ලෙහෙසියෙන් කරන්න, Python වල Function එකක් තියෙනවා.<br>අපි කොහොමද Function එකක් පාවිච්චි කරන්නේ.<br>ඉස්සෙල්ලාම Function එකේ නම ලියන්න ඕනේ.<br>ඊට පස්සේ <b>Parameters (පරාමිතීන්) නම් කරන්න ඕන.<br></b>පරාමිතීන් කියන්නේ කුමන පරාසයද, මේ අගයන් විචලනය විය යුත්තේ යන්නයි.<br>හරි අපි ඒ ගැන බලමු.<br>කිසියම් සංඛ්‍යාවක බලය ගන්න Function එකක් Python වල තියෙනවා. <br>ඒකට කියන්නේ <b>Pow ( )</b>  <br>වරහන් ඇතුලේ දාන්නේ ඉස්සෙල්ලාම, <i>අදාල සංඛ්‍යාව.</i><br>ඊට පස්සේ <b><i>එම සංඛ්‍යාව කුමන බලයෙන් වැඩිකල යුතුද</i></b> කියලා.<br> ඒ කියන්නේ බලය තමයි දෙවනියට දාන්නේ.<br><div class="panel panel-default"><div class="panel-body">Pow ( 5 , 4 ) = 625<br></div></div><br><br><img src="assets/imgs/12.PNG" class="img-responsive" width="40%"><br><br><hr><b>abs (  )<br></b>මේකෙන් කරන්නේ යම් සංඛ්‍යාවක මාපාංකය ලබා දීමයි. <br>ඒ කියන්නේ input එක ඍණ සංඛ්‍යාවක්( - )  දුන්නොත් Output එක එන්නේ ධන( + ) වලින්.<br><div class="panel panel-default"><div class="panel-body">abs ( -18  ) = 18<br>abs ( 5 ) = 5<br></div></div>Python අතුරුමුහුණතට (Interface) තියෙන්නේ Function යම් ප්‍රමාණයක් පමණයි. එම නිසා අපිට තවත් Function අවශ්‍ය නම් <b>import ( ආනයනය )</b> කරන්න වෙනවා.<br><hr><h4><b>Modules(මොඩියුල)</b></h4>Modules වල තමයි මේ Functions තැන්පත් කරල තියෙන්නේ. Module එකක් කියන්නේ, <b>ශ්‍රිත ගොනුවක් (A set of Functions).</b><br>හරි ඒ කතාව අමතක කරල අපි දැන් <b>floor (  )</b> කියන Function එක සලකමු.<br> මේකෙදි කරන්නේ කිසියම් දශමය සංඛ්‍යාවක් මෙහි වරහන් ඇතුලට දාපුවහම දශමය සංඛ්‍යා ටික අයින් කරල දෙන එකයි.<br> උදා- 15.00111345 කියල දුන්නොත්<br>15.0 ලෙස අපිට ප්‍රතිදානය ලැබෙනවා <br>floor ( 18.7 ) කියල දීල බලමු. ඒක ආවේ නෑ නේද ? ඒකට හේතුව තමයි මීට අදාල Module එක අපි import කරපු නැති එකයි.<br>හරි ඒක import කරන්නේ මෙහෙමයි.<br><div class="panel panel-default"><div class="panel-body">import math<br></div></div>math කියන module එකේ, ගණිතකර්ම වලට අදාල Functions list එකක්ම තියෙනවා.<br>හරි දැන් Enter කරන්න.<br><br><img src="assets/imgs/13.PNG" class="img-responsive" width="50%"><br><br>නමුත් දැනුත් floor (  ) කියල type කරන්න බෑ. <br>ඒත් ඒ Function එක පාවිච්චි කරන්නේ මේ විදිහටයි.<br><div class="panel panel-default"><div class="panel-body">math.floor ( 18.7 )<br>18.0<br>math.sqrt ( 81)<br>9.0<br></div></div>ඉතින් import Function වල මුලට module name එක ලියන්න වෙනවා.<br>ඒක ලියන්නේ මෙන්න මේ විදිහටයි.<br>module.function<br>එහෙම කරදරයි නම් ,<br>අපිට මේවා මොකේකට හරි සමාන කරගන්න පුලුවන්. <br>මෙන්න මේ වගේ.<br><div class="panel panel-default"><div class="panel-body">bucky = math.sqrt<br><br><img src="assets/imgs/14.PNG" class="img-responsive" width="40%"><br><br></div></div>දැන් bucky කියන නමට  math.sqrt සමාන කරල තියෙන්නේ. ඒක නිසා දැන් math.sqrt වෙනුවට bucky පාවිච්චි කරන්න පුලුවන්. <br><div class="panel panel-default"><div class="panel-body">bucky (9)<br>3.0<br></div></div>තවත් ඒ විදිහට කරල බලමු.<br><div class="panel panel-default"><div class="panel-body">bucky = math.floor<brbucky (19.8 )<br>19.0<br></div></div>හරි නේද ඉතින් ලොකු ලොකු කර්මලේක (programmes) ලියද්දි මේවා ගොඩක්  ප්‍රයෝජනවත්. <br>',
},
{
  id: 5,
  title: '<h2>5. How to save your programmes (ක්‍රමලේඛ සුරකීම)</h2>',
  Navtitle: 'How to save your programmes',
  url: 'lesson/learnfive-Python',
  content: '<hr>programme එකක් හදල save කරන හැටි අපි බලමු.<br> අපි තාමත් ඉන්නේ IDLE එකේ , මේක තමයි Python වල Interface එක. IDLE එකෙත් පුලුවන් type කරන දේවල් වල Output එක එවෙලේම බලාගන්න.<br> ඒත් මෙහි තියෙන ගැටලුව තමයි , මේකේ programme එකක් ලිව්වත් Python වලින් exit වෙනකොට අපි ලියපු සේරම නැති වෙනවා. ආයෙ අපිට ඒක ලබා ගන්න බෑ.<br> ඒකට විසදුමක් තියෙනවා අපි ඒක ගැන කතා කරමු.<br><br> <img src="assets/imgs/15.PNG" class="img-responsive" width="75%"><br><br>IDLE එකේ ඉන්නවනම් යන්න පුලුවන්. <div class="panel panel-default"><div class="panel-body">File ---> New Window</div></div> හරි දැන් අපිට ලැබෙන්නේ අලුත් කවුලුවක් , හරි මෙතනින් අපිට අවසර ලැබෙනවා programme එකක් save කරන්න. ඒ වගේම ඒ programme එක run කරන්න.<br><br><img src="assets/imgs/16.PNG" class="img-responsive" width="75%"><br><br>අපි මේ window එකේ දෙයක් ලියමු .<br><div class="panel panel-default"><div class="panel-body">print ”hey now brown cow”<br></div></div> <br><br><img src="assets/imgs/17.PNG" class="img-responsive" width="75%"><br><br>අපි මේක දැන් save කරල බලමු<br><br><img src="assets/imgs/18.PNG" class="img-responsive" width="75%"><br><br>දැන් table එකක් එනවා. මෙතන ඒකට ඔයාල කැමති දෙයක් දෙන්න පුළුවන්. ඒත් අමතක කරන්න එපා <div class="panel panel-default"><div class="panel-body">file name එක අගට .py කියල යොදන්න</div></div> .py කියල save කරපුවහම ඒක python file එකක් විදිහට save වෙනවා.<br>මේ window එකේ programme එකක් ලියල නිකම්ම run කරන්න බෑ. අනිවාර්යයෙන්ම save කරන්න ඕන.<br>දැන් අපි මේක run කරන හැටි බලමු . window එකේ menu එකට යන්න . ඊට පස්සේ <div class="panel panel-default"><div class="panel-body">run ---> run module</div></div> හෝ ලේසියෙන්ම keyboard එකේ <div class="panel panel-default"><div class="panel-body">F5</div></div> ඔබලත් programme එක run කරන්න පුළුවන්.<br><br><img src="assets/imgs/19.PNG" class="img-responsive" width="75%"><br><br>දැන් පේනවා නේද ? IDLE එක run වුනා<br><br><img src="assets/imgs/20.PNG" class="img-responsive" width="75%"><br><br>දැන් අපි පොඩි programme එකක් ලියමු.<br><div class="panel panel-default"><div class="panel-body">x = raw_input (“Enter name:”)<br>print “Hey”+x<br></div></div>මේකෙදී නිකම්ම input නැතුව raw_input කියල දාපුවහම x ට සමාන වෙන්නේ සංකේතයක් විදිහටයි.<br>(As a string) (මේ ගැන වැඩි දුරටත් පසුව සාකච්ඡා කරයි)<br> අපි දැන් මේක නිකම්ම run කරල බලමු. F5 ඔබන්න.<br>මම කිව්ව දේ හරි නේද ? Save කරන්නේ නැතුව Programme එක run කරන්න දෙන්නේ නෑ. දැන් ok කරන්න.  <br><br><img src="assets/imgs/21.PNG" class="img-responsive" width="75%"><br><br<div class="panel panel-default"><div class="panel-body">Enter name :<br></div></div>දැන් මේ විදිහට. එනවා . දැන් නමක් දාලා බලමු මේකට.<br><br><img src="assets/imgs/22.PNG" class="img-responsive" width="75%"><br><br>Enter name = bukey දැන් Enter ඔබන්න.<br><br><img src="assets/imgs/23.PNG" class="img-responsive" width="75%"><br><br.මේක ඇත්තටම පොඩි Programme එකක්.<br>ඒක නෙමෙයි දැන් Programme එක save කරපු තැනට ගියොත්, <br><br> <img src="assets/imgs/24.PNG" class="img-responsive" width="75%"><br><br>මේක අපිට වෙන Programmes  run කරන විදිහටම run කරන්න පුළුවන්. ( ඒ කියන්නේ Ms word, Adobe Photoshop Run  කරනවා වගේම)<br>දැන් අපේ Programme එක Double click කරල run කරමු.<br> Programme එක run උනා නේද ?<br><br><img src="assets/imgs/25.PNG" class="img-responsive" width="75%"><br><br>  හරි අපි නමක් දාලා බලමු <br>ඇත්තටම මොකද වුනේ ?<br> එක පාරටම Programme එක Exit වුනා නේද ?<br> ඇයි එහෙම කියල මම කියල දෙන්නම්.මොකක්ද මේ Programme එකෙන් කරන්නේ.<br><div class="panel panel-default"><div class="panel-body">x = raw-input (“Enter name:”) <br></div></div>මේක run කරනවා<br ඊට පස්සේ <br><div class="panel panel-default"><div class="panel-body">Print “ Hey ” + x<br></div></div> කියලත් run කරනවා.<br>ඊට පස්සේ මොනවත් නෑ නේද ? ඉතින් Programme එක එයාගේ වැඩේ කරල ඉවරයි. Programme එක දැන් කියනවා  “මගේ වැඩේ කරල ඉවරයි, මම යනවා” ඇත්තටම ඒක තමයි මෙතනදි වෙන්නේ.<br>ඉතින් අපි මොකද කරන්නේ මේ ප්‍රශ්නෙට. ඒක හරිම ලේසි දෙයක්.<br<div class="panel panel-default"><div class="panel-body"> raw-input (press &lt;Enter&gt;) කියල type කරමු.<br></div></div><br><br><img src="assets/imgs/26.PNG" class="img-responsive" width="75%"><br><br>දැන් අපි Programme එක run කරමු. <br><br><img src="assets/imgs/27.PNG" class="img-responsive" width="75%"><br><br>හරි ප්‍රශ්නෙට විසදුමක ලැබුණා නේද ?<br><hr>අන්තිමට සාරාංශයක් විදිහට ගත්තොත් IDLE එක ගොඩක් හොදයි. එහෙත් අපිට Programme එකක් Save කරන්න නම් File එකක් හදන්න වෙනවා. ( New window ) එකට ගිහින් මතකයි නේද ඒක. <br>',
},
{
  id: 6,
  title: '<h2>6. Strings (වදන්)  </h2>',
  Navtitle: 'Strings',
  url: 'lesson/learnsix-Python',
  content: '<hr>දැන් අපි ආයෙත් IDLE එකට යනවා <br>IDLE එකේ type කරමු.<br>“ Hey now” දැන් Enter එක ඔබන්න.<br>‘ Hey now ‘ මේක String එකක්. මොකද සංකේත කිහිපයකින් (characters) මේක හැදිල තියෙන්නේ.<pre>"Hey now"<br></pre>මෙහිදී ද්විත්ව උඩුකොමා (Double codes) , නැතුව උඩු කොමා (Single codes)  පාවිච්චි කළත් එකම දේ තමයි වෙන්නේ.වෙනසක් ඇත්තෙම නෑ.<br><br> <img src="assets/imgs/Python_Programming_Tutorial_-_6_-_Strings (video x-flv)[21-25-23].JPG" class="img-responsive" width="50%"><br><br>ඒත් සමහර අවස්ථා වලදී තියෙන්න පුළුවන්, ප්‍රශ්න එන.මම ඒ ගැන පෙන්වන්නම්.<pre> he’s a jerk ’<br>‘he’ s a jerk</pre>Python වලින්, String එකක් විදිහට යම් දෙයක් හදුනාගන්නේ, උඩුකොමාව පටන් ගන්න තැන හා අවසන් වෙන තැනයි.ඉතින් ද්විත්ව උඩුකොමා දැම්මොත් ඒ ප්‍රශ්න විසදෙනවා.<br>ඒත් තවත් විදිහක් තියෙනවා . මේක ඉතාමත් වැදගත්<br><br><img src="assets/imgs/Python_Programming_Tutorial_-_6_-_Strings (video x-flv)[21-28-03].JPG" class="img-responsive" width="50%"><br><br><pre>‘ he\’s  a  jerk ’</pre><br><img src="assets/imgs/Python_Programming_Tutorial_-_6_-_Strings (video x-flv)[21-40-28].JPG" class="img-responsive" width="50%"> <br><br>පිටු පසට <b>ඇල ඉර [ back slash ( \ ) ] </b> යොදන්න ඕන, අපට මඟ හරින්න අවශ්‍ය කොමාව ඉදිරියෙන්. <br>Python එකෙන් බලනවා ( \ ) ට පස්සේ තියෙන සලකුණු දිහා ඊට පස්සේ හිතනවා , “හරි, මේ කොමාවේ ඇත්තම තේරුම නෙවෙයි මේ තියෙන්නේ. ඒක නිකම්ම print  කරන්න අවශ්‍ය දෙයක් විතරයි” කියල.<br>ඉතින් ‘ he\’s  a  jerk ’ ලියල Enter එබුවොත් output එක බලාගන්න පුළුවන් අපිට.<br> මේ වැඩේ අත්‍යාවශ්‍ය වන තැනක් බලමු දැන්. අපේ string එකට <b>ද්විත්ව උඩුකොමා</b> එකතු කරන්න අවශ්‍ය උනොත් අපි ඒක කරන්නේ කොහොමද ?<br><pre> buckey said " hey now " to me<br>"buckey said , " hey now " to me" </pre><br><img src="assets/imgs/Python_Programming_Tutorial_-_6_-_Strings (video x-flv)[21-50-57].JPG" class="img-responsive" width="50%"><br>ඉතින් දැන් Python වලින් උඩුකොමා තියෙන තැන් බලනවා.<br><pre>" buckey said , " hey now " to me "</pre>හරි පටන් ගද්දිම ද්විත්ව උඩුකොමා තියෙනවා.<br>ඊට පස්සේ said, " කියන තැනින් string එක අවසන් වෙනවා. මොකද උඩුකොමානෙ තියෙන්නේ. ඊට පස්සේ hey now " to me " වලින් තවත් එකක් පටන්ගෙන  me " කියන තැනින් ඉවරවෙනවා.<br><br> <img src="assets/imgs/Python_Programming_Tutorial_-_6_-_Strings (video x-flv)[21-42-55].JPG" class="img-responsive" width="50%"><br><br>ඒත් අපි බලාපොරොත්තු උනේ ඒ දේ නෙමෙයි.<br>ඉතින් අපි මොකද කරන්නේ මෙහෙම ආපුවහම. වැඩේ හරිම ලේසියි.<br> <pre>" buckey said ,\ " hey now\ " to me "</pre>පිටුපස ඇල කොමාවට පසුව තියෙන සලකුණ, Python වලින් නොසලකන නිසා, අපට අවශ්‍ය Output එක ලැබෙන්න ඕන දැන්.<br>දැන් strings එකතු කරන එක ගැන අපි බලමු.<br><pre>a = " buckey " <br>b= " roberts " <br>a+b = " buckeyroberts " </pre>a+b කියපුවහම Python වලින් කරන්නේ a හි තියෙන සලකුණු ටික ( characters ), b හි තියෙන සලකුණු ටිකට, එකතු කරල output කරන එකයි.<br><br><img src="assets/imgs/Python_Programming_Tutorial_-_6_-_Strings (video x-flv)[22-05-47].JPG" class="img-responsive" width="50%"><br><br>ඒත් අපිට අවශ්‍ය ( buckey roberts ) කියල මැදට හිස්තැනක් සහිතව මේ string දෙක එකතු කරන්න නම්, අපි මොකද කරන්නේ ?a b කියල type කරමු. ඒක හරියන්නේ නෑ නේද <br><br> <img src="assets/imgs/Python_Programming_Tutorial_-_6_-_aStrings.jpg" class="img-responsive" width="50%"><br><br>එහෙනම් a,b කියල type කරමු.<br><pre>( ‘ buckey , ‘roberts’ )</pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_6_-_bStrings.jpg" class="img-responsive" width="50%"><br><br>ඒත් අපි බලාපොරොත්තු වුන output එක නෙවෙයි මේ.<br>හරි කියන්නම්, ඇත්තටම මොකක්ද වෙන්න ඕන කියල.<br><pre>a = “ buckey ” ( හිස්තැනක් සහිතව ඒක හදන්න )</pre>දැන් බලමු.<pre> a +b<br>"buckey roberts"</pre><br><br> <img src="assets/imgs/Python_Programming_Tutorial_-_6_-_Strings (video x-flv)[22-50-23].JPG" class="img-responsive" width="50%"><br><br>වැ‍ඩේ සාර්ථකයි නේද ?<br> මේකෙන් ඉගෙන ගන්න දෙයක් තියෙනවා. <br>මොකක්ද දන්නවද a +b කියපුවහම Python වලින් එකතු කරනවා a හා b string දෙකට අදාල සලකුණු ( characters ).<br>හරි, අපි a = “ buckey   “ කියල අන්තිමට හිස්තැනක් තිබිබ. ඒකෙන් අපිට තේරෙන්නේ, එක හිස්තැනක් (space) Python වලින් character එකක් විදිහට සලකනවා කියලයි.<br> මම හිතනවා, මම කියපු දේ ඔයාට තේරුණා කියලා.<br><hr>අපි මේ ඉගෙන ගත්තේ string වල මූලික අඩිතාලම . ඉතින් python වලින් ඉස්සරහට යද්දී මේ අපිට strings ගොඩාක් වැදගත් වෙනවා .<hr>', 
},
{
  id: 7,
  title: '<h2>7. More on String ( වදන් තවදුරටත් ) </h2>',
  Navtitle: 'More on String',
  url: 'lesson/learnseven-Python',
  content: '<hr>String වලින් කරන්න පුළුවන් තවත් දේවල් ටිකක්, කියල දෙන්නයි මේ යන්නේ. <br><pre>num = 18</pre><br>අපි,  num = 18 විදිහට  Variable එකක් හදමු.<br><br><pre>num + 16<br>34</pre>	<br><br><img src="assets/imgs/Python_Programming_Tutorial_-_7_-_bMore_on_Strings (video x-flv)[19-06-48].jpg" class="img-responsive" width="50%"><br><br>මේ විදිහට අපේ  Variable එක පාවිච්චි කරල ලේසියෙන්ම අපිට එකතු කරන්න පුළුවන්.<pre>print “ BUckey id “ + num</pre>  කියල දෙමු.<br>මට අවශ්‍ය ,  BUckey 18  කියල print වෙන්නයි.<br><br><img src="assets/imgs/Python_Programming_Tutorial_-_7_-_cMore_on_Strings (video x-flv)[19-06-48].jpg" class="img-responsive" width="50%"><br><br>ඒත් වැඩේ හරියන්නේ නෑ වගේ. මොකද, string හා numbers  එකතු කරන්න බැරි නිසා.<br>අපි ඒකට විසදුමක් හොයමු. <br><pre>num = str ( 18 ) කියල දෙමු.</pre>මේකෙදි කරන්නේ, 18 කියල තියෙන්නේ, ඇත්තටම number එකක් නෙවෙයි, ඒක  string එකක් කියල Python වලට තේරුම් කරන එකයි.<br>ඇත්තටම කීවොත් 18 , string එකක් විදිහට පරිවර්ථනය වෙනවා .<br> මේ <b>str ( )</b> ,  function එක ඇතුලට දාපුවම දැන් බලමු.<br><br><pre>print “ buckey is “ + num<br>buckey is 18<br></pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_7_-_cMore_on_Strings (video x-flv)[19-37-37].jpg" class="img-responsive" width="50%"><br><br>හරි මේ විදියටයි, අපි numbers, string වලට පරිවර්ථනය කර ගන්නේ. <br>මේක පාවිච්චි කරන්න පුළුවන් user ගෙන් input එකක් ගන්නකොට, user ගේ input එක string එකක්ම වෙලා එන විදිහට.<br><br>අපි variable එකක් හදමු දැන්.<br><pre>num 2 = 32<br>print “ my mom is “ + num2  <br></pre>අපි දන්නවා මෙහෙම කරන්න බෑ කියලා.<br>ඒත් str පාවිච්චි කරන්නේ නැතිව බැරිද මේ වැඩේ කරන්න . ඇත්තටම පුළුවන් ඒ වැඩේ කරන්නේ මෙහෙමයි.<br>ඔයාගේ key board එකේ black text කියන key එක දන්නවද ? දන්නැත්තම් දැනගන්න. <br>( ඒක තමයි Tab key එකට හරියටම උඩින් තියෙන key එක.<br> පෙනුමෙන් ඇත්තටම උඩු කොමාවක් වගේ තමයි.)දැන් අහන්න ,<pre>print “ my mom is “ + ` num 2 `</pre>  කියන එකේ ` num 2 `  දෙපසට මේ ` ( black text ) දෙකක් දාන්න.<br> දැන් Enter කරල බලන්න. <pre>my mom is 32</pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_7_-_gMore_on_Strings (video x-flv)[19-37-37].jpg" class="img-responsive" width="50%"><br><br>ඒ විදිහටයි num එකකුයි string එකකුයි ලේසියෙන්ම එකතු කරන්නේ. <hr>තව දෙයක් තියෙනවා .<br><b>repr ( )</b> , මෙන්න මේ function එක , මේක හාත්පසින්ම <b>str ( )</b> , function එක වගේමයි.<br>ඉතින් <b>str ( )</b> වෙනුවට අපිට ඕනෙනම් <b>repr ( )</b> , function එක භාවිතා කරන්න පුළුවන්.<br><br><img src="assets/imgs/Python_Programming_Tutorial_-_7_-_More_on_Strings (video x-flv)[19-37-37].JPG" class="img-responsive" width="50%"><br><br><hr>',
},
{
  id: 8,
  title: '<h2>8. RAW Input (වදන් ප්‍රදානය ) </h2>',
  Navtitle: 'RAW Input',
  url: 'lesson/learneight-Python',
  content: ' <hr><b>Raw_input( )</b> හා නිකම්ම <b>input ( )</b> යන function වල වෙනස මම කලින් කතා කලා.<br>ඒත් ඒ ගැන තවත් හොදින් මම කියල දෙන්නම්.<br>මම  දැන් ඉන්නේ Python, window එකේ මෙහෙම type කරමු<br><pre>buck= input(“Enter name:  ”)<br>print buck</pre>දැන් මේක run කරල බලමු.<br><br><img src="assets/imgs/Python_Programming_Tutorial_-_8_-_Raw_Input (video x-flv)[19-43-02].JPG" class="img-responsive" width="50%"><br><br>අහන නමට bukey අපි කියල දෙමු.<br> <pre>Enter name : bucky</pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_8_-_Raw_Input (video x-flv)[19-43-44].JPG" class="img-responsive" width="50%"><br><br>මොකක්ද ප්‍රශ්නේ ? මේකයි , අපි වචනයක්, input එකට දුන්නා .<br>ඒත් ඒක string විදිහට Python වලට දුන්න නැති නිසා, Python වලින් කෙලින්ම Print කරන්න දෙන්නේ නෑ, ඒක. <br>ඒකට විසදුම තමයි ,<b>raw_input ( )</b><br><pre>buck = raw_input (“Enter name:”)<br>print buck</pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_8_-_Raw_Input (video x-flv)[19-50-41].JPG" class="img-responsive" width="50%"><br><br>මේකෙදි වෙන්නේ user ගෙ input එක string එකක් විදිහට පරිවර්ථනය වෙන එකයි. දැන් run කරල බැලුවොත්....<br>දැන් වැඩේ හරි .<br><br><img src="assets/imgs/Python_Programming_Tutorial_-_8_-_Raw_Input (video x-flv)[19-51-06].JPG" class="img-responsive" width="75%"><br><br><hr>',
},
{
  id: 9,
  title: '<h2>9. Sequences and lists ( අනුක්‍රම සහ ලැයිස්තු )  </h2>',
  Navtitle: 'Sequences and lists',
  url: 'lesson/learnnine-Python',
  content: '<hr>දැන් මම list එකක් හදල පෙන්වන්නම්.<br>ඉස්සෙල්ලාම අපි හදන list එකේ නම ලියන්න ඕනේ.<br><pre>family = [ ‘mom’ , ‘dad’ , ‘bro’ , ‘sis’ , ‘dog’ ]</pre>ඊට පස්සේ කොටු වරහන් යොදලා ඒකේ ඇතුලේ list එකට අදාල අවයව ටික ලියන්න ඕනේ.<br>( mom , dad , bro , ..... කියන ඒවා නිසා අනිවාර්යයෙන්ම උඩුකොමා යොදන්න ) දැන් Enter එක ඔබපුවහම computer එකේ memory එකේ කොහෙහරි save වෙනවා මේ list එක. ඒක ප්‍රශ්නයක් නෙවෙයි.<br>හරි , මම මේ list එක ගැන පෙන්වන්නම්.<br><pre> family = [ ‘mom’ , ‘dad’ , ‘bro’ , ‘sis’ , ‘dog’ ]<br>              0       1       2       3       4</pre>මේකේ තියෙන අවයව ගත්තහම <b>හැම අවයවයකටම අදාල ( index number ) අංකයක්</b> තියෙනවා. ඉතින් computer එකෙන්, පළවෙනි අවයවය ‘ 0 ’ කියලයි නම් කරන්නේ. ඊට පස්සේ ඒවා 1 , 2 , 3 , ...... වන ලෙස පිලිවෙලට සලකුණු වෙනවා.<br> දැන් අපි බැලුවොත් ,<br><pre>family [ 3 ]<br>‘ sis ‘</pre>හොදට මතක තියාගන්න මුල් අවයවය 0 කියලයි හදුන්වන්නේ.<br>  ඒ නිසයි  family [ 3 ] කියල type කරපුවහම ‘sis ‘කියල ආවේ.<hr>අපි හිතමු ගොඩක් දිග list එකක් තියෙනවා. අපිට අවශ්‍යයි මේකේ අවයවයක් output කරගන්න.<br> එතකොට ගොඩක් කරදරයිනේ. අවයව මුල ඉදල ඒකේ index number එක ගණන් කර කර, හොයන්න. <br>ඉතින් ඒකට ලේසි ක්‍රමයක් තියෙනවා.<br>ඒක තමයි. <br>අන්තිම ඉදල මුලට ගණන් කිරීම.<pre>family = [ ‘mom’ , ‘dad’ , ‘bro’ , ‘sis’ , ‘dog’ ]<br>            -5      -4      -3      -2       -1  </pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_9_-_Sequences_and_Lists (video x-flv)[18-25-34]2.jpg" class="img-responsive" width="50%"><br><br>ඉතින් අන්තිම අවයවය - 1 කියලයි අපි ගන්නේ.<br> ඉස්සෙල්ල නම් 0 න් පටන් ගත්තේ ඇයි මේකෙන් -0 න් පටන් ගන්න බැරිද ? කොහොමටවත් බැ. <br> -0 කීවත්, 0 කීවත් බින්දුව බින්දුවම තමයි.<br>ඉතින් පිළිවලට -1 , -2 , -3 , ....... කියල අපිට අන්තිමේ ඉදල මුලට අවයව ටික නම් කරන්න පුළුවන්. <br>උදාහරණයක් ගත්තොත් <pre>family [ -2 ]<br>‘ sis ’</pre> කියල අපිට output එක එනවා<hr>සාරාංශයක් විදිහට ගත්තොත්,<br> list එකක අවයව ක්‍රම  දෙකකට නම් කරන්න පුළුවන්.<br><pre>1.මුල සිට අගට (0 , 1 , 2 , 3 , ....... )<br>2.අග සිට මුලට ( …….. , -3 , -2 , -1 )</pre>තව දෙයක් තියෙනවා list විතරක් නෙමෙයි string එකක තියෙන අගයන් උනත් මෙහෙම නම් කරන්න පුළුවන්.<br>ඒක කරන්නෙ මෙහෙමයි,<pre>"bucky"[ 3 ]<br>"k"</pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_9_-_Sequences_and_Lists (video x-flv)[18-25-34].JPG" class="img-responsive" width="50%"><br><br><hr>',
},
{
  id: 10,
  title: '<h2>10. Slicing ( කොටස් කිරීම ) </h2>',
  Navtitle: 'Slicing',
  url: 'lesson/learnten-Python',
  content: '<hr>මොකක්ද Slicing කියන්නේ ? list හෝ වෙනයම් දෙයක එහි අවයව කොටසක් වෙන් කරල ගන්න එකට තමයි Slicing කියන්නේ.<br><pre>example = [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ]</pre>මෙහෙම list එකක් ගැන හිතමු. <br>අපිට මේ list එකෙන් කොටසක් කඩල ගන්න ඹ්න නම් කරන්න තියෙන්නෙ මේකයි.<br><pre>example[4:8]<br>[ 4 , 5 , 6, 7 ]</pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_10_-_aSlicing (video x-flv)[12-53-10].jpg" class="img-responsive" width="75%"><br><br>ඉස්සෙල්ලාම list එකේ නම දාන්න ඹ්න.<br>ඊට පස්සේ කොටු වරහන් ඇතුලේ <b>මුලින්ම list එකේ කඩල ගන්න අවශ්‍ය අවයවයේ index එක</b> දාන්න ඹ්න. <br>ඊට පස්සේ <b>කඩල අවසන් කරන්න ඹ්න අවයවයට පසු අවයවයේ index එක</b> දාන්න ඹ්න ඒ ගැන හොදට මතක තියාගන්න.<br>තව එකක් බලමු.<br><pre>example [ 4:9]<br>[4,5,6,7,8]<br><br>example [ 4 :10 ]<br>[4,5,6,7,8,9]</pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_10_-_aSlicing (video x-flv)[12-54-05].jpg" class="img-responsive" width="50%"><br><br>Slicing කරන එක ක්‍රමයක්, තමයි මේ. <br>තවත් ක්‍රමයක් තියෙනවා.<br>අපිට පිටුපසට ගණන් කරන්නත් පුළුවන්. ගොඩක් දිග list එකක් නම් තියෙන්නේ , මේ ක්‍රමය ගොඩක් ලේසියි.<br><pre>example= [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ]-10 -9  -8  -7  -6  -5  -4  -3  -2  -1 </pre><pre>example [-5 : -1 ]<br>[ 5,6,7,8 ]</pre>මට දැන් අවශ්‍යයි, 5 ඉදන් ඉතුරු අවයව සියල්ලම ගන්න.<br><pre>example [ -5 : 0 ]<br>[  ]</pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_10_-_Slicing (video x-flv)[13-00-07].JPG" class="img-responsive" width="75%"><br><br>ඇයි මේ විදිහට ආවේ. ?<br>මම කලින් පාඩමේ කියල දුන්න විදිහට  - 0 කියල එකක් නෑ.<br>0 කියන්නේ 0 වම තමයි. ඒ නිසයි මෙහෙම වුනේ.<br>ඒත් මට අවශ්‍ය, listඑකේ තියෙන 9 ත්, එන විදිහට කඩල ගන්න.<br><br><pre>example [ -5 :  ]</pre>මේ විදිහට දෙවනුව හිස්තැනක් තියන්න . ඒකේ තේරුම තමයි. -5 ඉදල තියෙන ඔක්කොම අවයව ටික එලියට ගන්න කියන එකයි.<br><pre>[ 5,6,7,8,9 ]</pre><pre>example [   : 7 ]<br>[ 0,1,2,3,4,5,6 ]</pre>මේකත් ඒ වගේමයි. index එක 7 ට ඉස්සරහ තියෙන index සියල්ලටම අදාල අවයවයන් එලියට ගන්න කියලයි මේකෙන් කියන්නේ.<br><br><img src="assets/imgs/Python_Programming_Tutorial_-_10_-_Slicing (video x-flv)[12-57-24].JPG" class="img-responsive" width="75%"><br><br>අපි ඒකට විසදුමක් හොයමු. <br>num = str ( 18 ) කියල දෙමු. <br>මේකෙදි කරන්නේ, 18 කියල තියෙන්නේ, ඇත්තටම number එකක් නෙවෙයි, ඒක  string එකක් කියල Python වලට තේරුම් කරන එකයි.<br>ඇත්තටම කීවොත් 18 , string එකක් විදිහට පරිවර්ථනය වෙනවා .<br> <br>මේ str ( ) ,  function එක ඇතුලට දාපුවම දැන් බලමු.<pre>print "buckey is" + num<br>buckey is 18</pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_7_-_cMore_on_Strings (video x-flv)[19-37-37].jpg" class="img-responsive" width="75%"><br><br>හරි මෙහෙමත් බලමු.<br><pre>example [ : ]</pre>කිසිම index num එකක් නැවත හිස්වම දුන්නොත් මොකද වෙන්නේ ?<br><pre>[ 0,1,2,3,4,5,6,7,8,9 ]</pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_10_-_Slicing (video x-flv)[13-02-52].JPG" class="img-responsive" width="75%"><br><br>මුළු list එකම ආවා නේද ?<br>මුළු list එකම අපිට එකවැර ගන්න ඕනෙනම් , මේ විදිහටත් ලේසියෙන්ම ගන්න පුළුවන්.<br>තව දෙයක් තියෙනවා . අපි දන්නේ පරාමිතින් ( parameters ) දෙකයිනේ. <br>ඒත් තවත් තෙවන පරාමිතයක් (3rd parameter) තියෙනවා. <br>තෙවන පරාමිතියෙන් කියන්නේ අපි යම් පරාසයක අවයවයන් එකකින් ගනිද්දි , කිසියම් රටාවකට <br><br>( පරතරයකින් ) අවයවයන් කඩල ගන්න අවශ්‍ය ඉලක්කමයි.<br><pre>example [ 1 : 8 : 2 ]<br>[ 1,3,5,7 ] </pre>	දැන් කියපු දේ තේරෙනවා නේද ?<br><br><img src="assets/imgs/Python_Programming_Tutorial_-_10_-_Slicing (video x-flv)[12-52-37].JPG" class="img-responsive" width="75%"><br><br><pre>example [ 10 : 0 : -2 ]<br>[ 9 , 7 , 5 , 3 , 1 ]</pre>මේ විදිහට පිටුපසට සංඛ්‍යා මගහැර ගන්නත් පුළුවන්.<br>මේක ගොඩක් වටිනා දෙයක්<br><br><img src="assets/imgs/Python_Programming_Tutorial_-_10_-_Slicing (video x-flv)[13-11-31]2.jpg" class="img-responsive" width="75%"><br><br>ඉස්සෙල්ලා කරපු විදිහට කරන්න කම්මැලියි වාගේ නම් ඒකම කරන්න ලේසි විදිහක් තියෙනවා <br><pre>Example [  : : - 2 ]<br>[ 9 , 7 , 5 , 3 , 1 ]</pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_10_-_Slicing (video x-flv)[13-11-31].JPG" class="img-responsive" width="75%"><br><br>මුළු list එකම පිටුපසට -2 ක ගානේ, සංඛ්‍යා මග හැරල output වෙන එකයි, මේකෙදි ඇත්තටම වෙන්නේ.<br> මේවා තමයි slicing වල මූලිකම දේවල් ඉතින් මේ විදිහට list එකක තියෙන ඕනෙම දත්තයක් එලියට ගන්න පුළුවන් ලේසියෙන්ම. .<br><hr>',
},
{
  id: 11,
  title: ' <h2>11 . Editing Sequences ( අනුක්‍රමයන් සෑදිම )</h2>',
  Navtitle: 'Editing Sequences',
  url: 'lesson/learneleven-Python',
  content: '<hr>Sequence කියන්නේ ඇත්තටම list , strings , tables වාගේ දේ වලට තමයි. <br>ඉතින් Sequence වලින් කරන්න පුළුවන් පොඩි වැඩ ටිකක් ගැන බලමු. <br><pre>[7, 4, 5 ] + [ 4, 6 ,5 ]</pre>ඇත්තටම මේ Sequence 2ක්. ඉතින් එකම ජාතියේ Sequences එකතු කරන්න , <br>  ( + )  ලකුණු පාවිච්චි කරනවා. enter එක එඹුවොත් අපිට output එකක් එනවා.<pre>[ 7, 4, 5, 4, 6, 5 ]</pre>මේකෙදි වුණේ Sequences 2ක් එකතු වෙලා තනි Sequence එකක්, ඒ කියන්නේ තනි list එකක් හැදුන එකයි.<br><br><img src="assets/imgs/Python_Programming_Tutorial_-_11_-_Editing_Sequences (video x-flv)[13-13-19].JPG" class="img-responsive" width="40%"><br><br>තව එකක් බලමු.<br><pre>"bucky" + "roberts"<br>"buckyroberts"</pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_11_-_Editing_Sequences (video x-flv)[13-16-39].JPG" class="img-responsive" width="40%"><br><br>දැන් අපි, list එකකුයි string එකකුයි එකතු කරමු.<br><pre>[ 4, 5, 6 ] + "bucky"</pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_11_-_Editing_Sequences (video x-flv)[13-17-18].JPG" class="img-responsive" width="50%"><br><br>අපිට මේ දෙක එකතු කරන්න දෙන්නේ නෑ නේද ?<br>ඇයි දන්නවද එහෙම වෙන්නේ.<br>මේකෙදි මෙහෙම එකතු කරන්න පුළුවන් වෙන්නේ එකම ජාතියේ Sequences විතරයි. ඒක හොදට මතක තියාගන්න.<br> අපි දැන් බලමු, Sequence ගුණ කිරීම ගැන.<br><br><pre>"bucky" * 10</pre>bucky ලා 10 ක් ආවා නේද ?<br><br><img src="assets/imgs/Python_Programming_Tutorial_-_11_-_Editing_Sequences (video x-flv)[13-19-39].JPG" class="img-responsive" width="50%"><br><br>ඉතින් මේකෙදි වුනේ bucky කියන එක 10 වතාවක් නැවත නැවත පිටපත් විමයි.<br><br><pre>21 * 10<br>210</pre>ඇත්තටම මේ ගුණ කිරීම නම් හොදට වුනා. ඒත් මම බලාපොරොත්තු වුනේ ඒක නෙවෙයි.<br> මට ඕන වුනේ ඉස්සෙල්ලා වාගේ bucky කියන එක 10 වතාවක් පිටපත් වුන විදිහටම 21 ත් 10 වතාවක් පිටපත් කරන්නයි.<br><br>ඇත්තටම එහෙම කරන්නෙ කොහොමද ?<pre>[ 21 ] * 10</pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_11_-_Editing_Sequences (video x-flv)[13-32-14]2.jpg" class="img-responsive" width="40%"><br><br>වැඩේ හරි නේද ?<br>ඉතින් මේ ක්‍රමේ ගොඩක් වටිනවා කියල ඔයාලට තේරෙනවා ඇති.<br><br>හරි මම දැන් අලුත් දෙයක් කියල දෙන්නයි යන්නේ. <br><pre>name = ‘ roast beef ‘</pre>මෙහෙම අපි type කරමු.<br><pre>"z" in name<br>False</pre>මේකේ in කියන එක Python වල build in keyword එකක්. "z" in name වලින් ඇත්තටම කරන්නේ z අකුර ,name එක තුල තියෙනවාද කියල පරීක්ෂා කරල දෙන එකයි.මේ සදහා විශේෂ වූ in කියන build in keyword එක පාවිච්චි වෙනවා.<br><pre>"r" in name<br>True</pre>මෙහෙම වෙන්න හේතුව name = "roast beef" එක තුල  r අකුර තියෙන නිසයි.<br><br><img src="assets/imgs/Python_Programming_Tutorial_-_11_-_Editing_Sequences (video x-flv)[13-32-14]3.jpg" class="img-responsive" width="40%"><br><br>අපි පොඩි list එකක් හදමු.<pre>family = [ "mom" , "dad" , "bro" ]<br>"sis" in family<br>False  <br>"mom" in family<br>True</pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_11_-_Editing_Sequences (video x-flv)[13-34-13].JPG" class="img-responsive" width="40%"><br><br><pre>අවයවය (element) <b>in</b> අනුක්‍රමය (Sequence)</pre>ඔයාලට ඒ කරුණ තවත් තහවුරු වෙන්න ඇති දැන්.මේ විදිහට අපිට ඕනම අනුක්‍රමයක(Sequence) <br>අවයව(elements) පරීක්ෂා කරල බලන්න පුළුවන්.<br><hr>',
},
{
  id: 12,
  title: '  <h2>12. More List Functions (ලැයිස්තු ආශ්‍රිත ශ්‍රිත තවදුරටත්) </h2>',
  Navtitle: ' More List Functions',
  url: 'lesson/learntwelve-Python',
  content: '<hr>අපි list එකක් හදමු.<br><pre>numbers = [8, 1, 4, 17, 28, 165, 7 ]</pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_12_-_More_List_Functions (video x-flv)[03-03-01]2.jpg" class="img-responsive" width="50%"><br><br>අපිට දැන් ඕන , මේ list එකේ අවයවයන් කීයක් විතර තියෙනවද කියල ගණන් කරල බලන්න. <br>නිකමට ගණන් කරල බලමු.<br>7ක් තියෙනවා නේද ? <br><br>මේ list එකේනම් අවයවයන් ටික ගණන් කරන්න එච්චරම අමාරු නෑ. ඒත්.. ලොකු, දිග list එකක් තිබුණොත් එහෙම, අපිට තරු පේනවනේ. <br>ඉතින් වැඩිය දගලන්නේ නැතිව අවයවයන් කීයක් තියෙනවද කියල ගන්න ලේසි ක්‍රමයක් තියෙනවා. ඉස්සෙල්ලාම මේකයි කරන්නේ. <br>len කියන function එක type කරල වරහන් ඇතුලේ list එකේ නම දාන්න ඕනේ.<br><br><pre>len (numbers)<br>7</pre>හරි අවයව ගාණ, ආවා නේද ?<br><br><img src="assets/imgs/Python_Programming_Tutorial_-_12_-_More_List_Functions (video x-flv)[03-03-01]3.jpg" class="img-responsive" width="50%"><br><br>හරි, මේ වගේ සරල function ටිකක් ගැන මම දැන් කියන්නම්,<br><br><img src="assets/imgs/Python_Programming_Tutorial_-_12_-_More_List_Functions (video x-flv)[03-03-01]2.jpg" class="img-responsive" width="80%"><br><br><pre>max (numbers)<br>165</pre>මේකෙදි ලැබෙන්නේ list එකේ තියෙන වැඩිම අගයක් සහිත අවයවයයි.<pre>min (numbers)<br>1</pre>මේකෙදි වෙන්නේ, list එකේ තියෙන අඩුම අගයක් සහිත අවයවය, අපිට දෙන එකයි.<br> <br><img src="assets/imgs/Python_Programming_Tutorial_-_12_-_More_List_Functions (video x-flv)[03-03-01]4.jpg" class="img-responsive" width="50%"><br><br>තවත් function එකක් ගැන කතා කලොත් , <br><pre>list ( )</pre>මේකෙදි කරන්නේ string එකක අවයවයන්, list එකකට වෙන වෙනම පරිවර්ථනය කරල දිමයි.<pre>list( "bucky" ) <br>[ "b" , "u" , "c" , "k" , "y" ]</pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_12_-_More_List_Functions (video x-flv)[03-03-01]5.jpg" class="img-responsive" width="50%"><br><br>numbers කියල type කරමු.<br>එතකොට අපේ list එක අපිට ලැබෙනවා.<pre>[ 8 , 1 , 4 , 17 , 28 , 165 , 7 ]</pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_12_-_More_List_Functions (video x-flv)[03-03-01]2.jpg" class="img-responsive" width="50%"><br><br>අපිට මේකේ තියෙන අවයවයන් වෙනස් කරගන්න ඕන වෙනවා. <br>අපි ඒක කොහොමද කරන්නේ. <br><pre>numbers[ 3 ] = 77</pre>මේකේ තේරුම තමයි , <br>index එක 3 වන අවයවය, වෙනුවට 77 ආදේශ කරන්න කියන එකයි.<br>ඉතින් දැන් Enter එක ඔබලා බලමු.<br>මොනවත් වුනේ නෑ නේද ? ඇත්තටම දෙයක් වුනා කිවොත් හරි ,<br>දැන් index එක 3 වෙන තැනට 77 ආදේශ වෙලයි තියෙන්නේ.<br>ඒක පරීක්ෂා කරල බලමු අපි.<br>අපි numbers කියල type කරල list එක බලමු.<br><pre>[ 8, 1, 4, 77, 28, 165, 7 ]</pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_12_-_More_List_Functions (video x-flv)[03-03-41]2.jpg" class="img-responsive" width="50%"><br><br>හරි නේද ? index එක 3 වෙන තැනට 77 වැටිල.<br>අවයවයන් මකන්නත් පුළුවන් මේ විදිහටම. <br>ඉස්සෙල්ලාම del keyword එක type කරල list එක සමග අවයවයේ index එක දෙන්න.<br>මෙන්න මේ විදිහට<br><b>del numbers (3)</b>හරි දැන් මැකිලයි තියෙන්නේ.<br>හරියටම තහවුරු කරගන්න list එක අරන්ම බලමු.<br><pre>numbers<br>[ 8, 1, 4, 28, 165, 7 ]</pre>77 මැකිල නේද ?<br><br><img src="assets/imgs/Python_Programming_Tutorial_-_12_-_More_List_Functions (video x-flv)[03-03-41]3.jpg" class="img-responsive" width="50%"><br><br>හරි, අපි ඉගෙන ගත්තා , <br>අලුත් function ටිකක්, ඒවාගෙම අලුත් වැඩ කෑලි ටිකක්. මේ තාක් මම කියල දුන්න ඒවායෙන්, <br>හොද programme එකක් ඔයාටම හදන්න පුළුවන් කියල මට හිතෙනවා . <br>ඹයාට නිතරම තියෙන සරල ගැටලුවක්, මේවායෙන් ලේසියෙන්ම විසදගන්න පුළුවන්.<hr>Python වලින් එක පාරටම ගැටලුව ගැන හිතාගන්න අමාරුයි වගේ නම් ඉස්සෙල්ලාම, <br>Algorithm එකක් හදන්න . <br>ඊට පස්සේ flow chart එකත් හදා ගන්න. <br>ඊට පස්සේ pseudo code එකකුත් ඕනෙනම් ලියාගෙන, python language එකෙන් programme එක ලියන්න පටන් ගන්න.<pre>Algorithm => Flow chart => Pseudo code => Programme language</pre><hr>',
},
{
  id: 13,
  title: ' <h2>13. Slicing Lists (ලැයිස්තු කොටස් කිරීම) </h2>',
  Navtitle: 'Slicing Lists',
  url: 'lesson/learnthirteen-Python',
  content: '<hr>Slicing ගැන ඔයාල දැනටමත් ගොඩක් දේවල් දන්නවනේ. Slicing ආශ්‍රිත තවත් අලුත් දේවල් ටිකක් ඔයාට කියල දෙන්නයි, මම මේ යන්නේ.<br>වචනයක තියෙන අකුරු list එකක අවයව කරන්නේ මෙහෙමයි.<pre>example = list ("easyhoss")</pre>මෙහෙම type කරල Enter එක ඔබපුවහම list එකක් හැදෙනවා.<br>හරි දැන් අපේ list එක පරීක්ෂා කරල බලමු.<br><pre>example<br>["e" , "a" , "s" , "y" , "h", "o" , "s" , "s" ]</pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_13_-_Slicing_Lists (video x-flv)[03-04-08]1.jpg" class="img-responsive" width="50%"><br><br>හරි අපි දැන් මේ list එකට අලුත් දේවල් ටිකක් එකතු කරමු. <br><pre>example [ 4 :   ] = list ( "baby" )</pre>මේකෙන් ඇත්තටම කියන්නේ, <br>index එක 4 වන අවයවයත් ඇතුළුව ඉන් එහාට තියෙන අවයව ටික මකල ඒ වෙනුවට ‘ baby ’ යන වචනය අදාල අවයව ටිකට ආදේශ කරන්න කියලයි. <br>ඒක පරීක්ෂා කරල බලමු.<pre>example <br>[‘e’ , ‘a’ , ‘s’ , ‘y’ , ‘b’, ‘a’ , ‘b’ , ‘y’ ] </pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_13_-_Slicing_Lists (video x-flv)[03-04-08]2.jpg" class="img-responsive" width="50%"><br><br>හරි, ඒ ගැන ඔයාට තේරෙන්න ඇති.<br>තව ගොඩක් වැදගත් දෙයක් තියෙනවා, කියල දෙන්න.<br>මේකයි, දැන් ඹය list එකක, අවයව 2 ක් මැදට අපිට අලුත් අවයවයක් දාගන්න පුළුවන්ද?<br>ඒ ගැන දැන් බලමු.<br> අපි අලුත් list එකක් හදලම වැඩේ පටන්ගමු.<br><pre>example = [ 7 , 8 , 9 ]</pre>හරි, list එක හැදුනනෙ දැන්.<br><br><img src="assets/imgs/Python_Programming_Tutorial_-_13_-_Slicing_Lists (video x-flv)[03-04-49]2.jpg" class="img-responsive" width="50%"><br><br><pre>example = [ 7 , 8 , 9 ]<br>0   1   2<br>example[1:1] = [ 3 , 3 , 3 ]</pre>මේකෙන් වෙන දේ මම කියන්නම්, ඔයාලට මතක ඇතිනේ, අවයව වල  index  නම් කරන හැටි ගැන (0,1,2,3,......). ඉතින් මේකෙන් කියන්නේ, index number = 1වෙන අවයවය ලඟට යන්න, ඊට පස්සේ ආයෙත්, index number = 1වෙන තැනට යන්න, හරියටම එතනට, [ 3 , 3 , 3 ] පතබාන්න කියලයි. <br>ඇත්තටම,ඕකෙන් කියන්නේ 7,8  අතරට (එක 0 හා 1 වන අවයව අතරට), [ 3 , 3 , 3 ]  දාන්න කියලයි.<br>දැන් list එක check කරල බලමු, output එක ගැන.<pre>[ 7 , 3 , 3 , 3 , 8 , 9 ]<br>  0   1   2   3   4   5</pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_13_-_Slicing_Lists (video x-flv)[03-04-49]3.jpg" class="img-responsive" width="50%"><br><br>මම කිව්ව දේ හරි නේද?<br>තව පොඩි දෙයක්, මම ඔයාට කියල දෙන්නම්.<br><pre>example[1:5] = [ ]</pre>මෙහෙම කළොත් මොකද වෙන්නේ?<br>ඔයාට මතක ඇති, <br><pre>example[1:5]</pre>මේකෙදි, දෙවනුව සඳහන් කරන, index එක නැතුව, ඊට පෙර අවයව ටික ගන්න එක ගැන.<br>list එක check කරලම බලමු.<br><pre>[ 7 , 9 ]</pre>මම හිතනව ඒක ඔයාට තේරෙන්න ඇති.<br><br><img src="assets/imgs/Python_Programming_Tutorial_-_13_-_Slicing_Lists (video x-flv)[03-04-49]4.jpg" class="img-responsive" width="50%"><br><br>ඉතින් මේ විදිහට list එකක තියෙන අවයව මකන්න අපිට පුළුවන්. <hr>',
},
{
  id: 14,
  title: '  <h2>14. Intro to Methods (රීතීන් සදහා ප්‍රවිෂ්ඨය ) </h2>',
  Navtitle: 'Intro to Methods',
  url: 'lesson/learnfourteen-Python',
  content: '<hr>Python වල හැටියට methods කියන්නේ, එක්තරා විදිහක building function වලටම තමයි. ඉතින් මේවා වලින් වැඩගන්න හැටියි, මම දැන් කියල දෙන්න යන්නෙ.<br>ඉස්සෙල්ලාම පොඩි list එකක් හදමු.<pre>face = [ 21 , 18 , 30 ]</pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_14_-_Intro_to_Methods (video x-flv)[17-16-03].JPG" class="img-responsive" width="50%"><br><br>ඉතින් මේ methods පාවිච්චි කරද්දි සාමාන්‍ය වරහන්, අනිවාර්යෙන්ම පාවිච්චි කරන්න. මතකනේ face.append එක අගට 45 යොදන්න අපි පාවිච්චි කලේ, සාමාන්‍ය වරහන්. ඉතින් ඒ දේ ගැන හොඳට මතක තියාගන්න.<br>තවත් ගොඩක් වැදගත් වෙන method එකක් ගැනයි, මම ඊළඟට කියන්න යන්නේ.<br>ඒකට පොඩි list එකක් හදමු.<pre>apples = [ ‘i’ ,‘love’ ,‘apples’ ,‘apples’ ,‘now’]</pre>list එක check කරලත් බලමු.<br><br><img src="assets/imgs/Python_Programming_Tutorial_-_14_-_aIntro_to_Methods (video x-flv)[17-16-54].jpg" class="img-responsive" width="50%"><br><br><pre>apples<br>[ ‘i’ ,‘love’ ,‘apples’ ,‘apples’ ,‘now’]</pre>හරි, බලමු දැන්,<pre>apples.count(‘apples’)<br>2</pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_14_-_aIntro_to_Methods (video x-flv)[17-17-24].jpg" class="img-responsive" width="50%"><br><br>ඇයි 2 ආවේ? ඒක වෙන්නෙ මෙහෙමයි. count එකෙන් කරන්නේ, අපි දෙන වචනෙ, මේ list එකේ කී පාරක් තියෙනවද කියල, හොයල දෙන එකයි. ඉතින් උඩ තියෙන විධානය ක්‍රියාත්මක කරපු ගමන්, මෙයා list එකේ මුල ඉදන් බලනව, අපි දුන්න වචනයට ගැලපෙන වචනයක් තියෙනවද කියල. ඔහොම ගණන් කරගෙන යනකොට මෙයාට අහුවෙනව apples කියල දෙවතාවක සඳහන් වෙලා තියෙනව කියල. ඉතින් එයා output එක, 2 කියල අපිට පෙන්වනව.<br>අපි දැන් list එකේ නැති වචනයක් දාල බලමු.<pre>apples.count(‘bow’)<br>0</pre>උත්තරේ හරි නේද?<br><br><img src="assets/imgs/Python_Programming_Tutorial_-_14_-_bIntro_to_Methods (video x-flv)[17-17-24].jpg" class="img-responsive" width="50%"><br><br>තවත් ලස්සන method එකක් ගැන, මම ඔයාට කියල දෙන්නම්.<pre>one = [ 1 , 2 , 3]  two = [ 4 , 5 , 6 ]</pre>මම list දෙකක් හදාගත්ත.<br><br><img src="assets/imgs/Untitled.png" class="img-responsive" width="50%"><br><br><pre>one.extend(two)</pre>මේකෙන් ඇත්තටම කරන්නෙ විහිදුවීමක්. මේකෙදි වෙන්නෙ one කියන list එකේ අගට two කියන list එක එකතු කිරීමයි. මෙහිදී one කියන list එක විහිදුවීමක් වෙනව. මේකෙදි ප්‍රධාන වෙන්නේ one කියන list එකයි.<br>අපි දැන් one, list එක check කරල බලමු.<pre>one<br>[ 1 , 2 , 3 , 4 , 5 , 6 ]</pre><br><br><img src="assets/imgs/Python_Programming_Tutorial_-_14_-_dIntro_to_Methods (video x-flv)[17-17-24].jpg" class="img-responsive" width="50%"><br><br><hr>සාරාංශයක් විදිහට ගත්තොත්,<br><pre>object.method(argument)<br>වස්තුව.ක්‍රමය(තර්කය)</pre>මේ විදිහට සාධාරණ ව්‍යුහයකින් පෙන්නන්න පුළුවන්, methods පාවිච්චි කරන හැටි.<br>ඉදිරියටත් තවත් අලුත් methods ටිකක් කියල දෙන්නම්. ඉතින් මේ methods වලින් ලේසියෙන්ම, ගොඩක් කාර්යක්ෂමව programmes හදාගන්න අපට උදව් වෙනව.<hr>',
},
{
  id: 15,
  title: '<h2>15. More Methods ( රීතීන් තවදුරටත් ) </h2>',
  Navtitle: 'More Methods',
  url: 'lesson/learnfifthteen-Python',
  content: '<hr><h4>index([item_name])</h4>දැන් මම කියල දෙන්න යන්නේ index කියන method එක ගැන.<br><div class="panel panel-default"><div class="panel-body">say = [ ‘hey’ , ‘how’ , ‘brown’ , ‘cow’ ]<br></div></div><br><br><img src="assets/imgs/N15_1.PNG" class="img-responsive" width="60%"><br><br>හරි අපි listඑකකුත් හැදුවා.<br>දැන් මෙහෙම type කරමු.<br><div class="panel panel-default"><div class="panel-body">say.index(‘brown’)<br>2<br></div></div><br><br><img src="assets/imgs/N15_2.PNG" class="img-responsive" width="50%"><br><br>මේකෙදි වෙන දේ ඔයාට දැනටමත් තේරෙනව ඇති.<br>අදාල අවයවයේ නම දීපුහම, index එක ලේසියෙන්ම අපිට හොයල දෙනව.<br><hr><h4>insert([index,item_name])</h4><div class="panel panel-default"><div class="panel-body">say.insert( 2, ’hoss’ )<br></div></div><br><br><img src="assets/imgs/N15_3.PNG" class="img-responsive" width="60%"><br><br>මේකෙදි කරන්නේ, අපි දෙන index එකට, අපි දෙන අවයවය, දාන එකයි. එතකොට ඉස්සෙල්ලා ඒ index එකේ තිබුණ අවයවයට මොකද වෙන්නෙ?<br>ඒ ගැන list එක check කරලම බලමු.<br><div class="panel panel-default"><div class="panel-body">say<br>[ ‘hey’ , ‘now’ , ‘hoss’ , ‘brown’ , ‘cow’ ]<br></div></div>තේරෙන්න ඇතිනේ, එතනින් එහා තියෙන අවයව ඔක්කොම එකකට එකක් පිටුපසට යනව.<br><hr>දැන් අපි බලමු, list එකක අවයව ඉවත් කරන්න තියෙන, methods 2ක් ගැන.<br><h4>pop([index])</h4><div class="panel panel-default"><div class="panel-body">say.pop(1)<br>‘now’<br>say<br>[ ‘hey’ , ‘hoss’ , ‘brown’ , ‘cow’ ]<br></div></div>මේකෙදි කරන්නේ, අපට ඕන index එක දීපුහම, ඒ index එකට අදාල අවයවය output කරන ගමන් list එකෙන් ඒ අවයවය ඉවත් කිරීමක්.<br><br><img src="assets/imgs/N15_4.PNG" class="img-responsive" width="50%"><br><br><hr><h4>remove([item_name])</h4><div class="panel panel-default"><div class="panel-body">say.remove( ‘brown’ )<br></div></div>මේක ටිකක් වෙනස්, මේකෙදි අපට ඉවත් කරන්න අදාල අවයවය සඳහන් කරපුහම, ඒ අවයවය list එකෙන් ඉවත් කරනව. බැරි වෙලාවත් අපි සඳහන් කරන අවයවය කිහිප වතාවක, list එකේ තිබුණොත් මොකක් වෙයිද? එතකොට වෙන්නේ මුලින්ම හම්බ වෙන අවයවය ඉවත් කරන එකයි.<br><br><img src="assets/imgs/N15_5.PNG" class="img-responsive" width="60%"><hr><h4>reverse()</h4><div class="panel panel-default"><div class="panel-body">say.reverse()<br></div></div>මේ method එකෙන් කරන්නේ අපේ මුළු list එකම කනපිට හරවල දෙක එකයි.  ඒ කියන්නේ අග ඉදල මුලට අවයව ටික පෙළගැස්වීමයි.<br><br><img src="assets/imgs/N15_6.PNG" class="img-responsive" width="50%"><br><br><hr>',
},
{
  id: 16,
  title: '<h2>16. Sort and tuples (පෙළගැස්වීම සහ ටපල්ස් )</h2>',
  Navtitle: 'Sort and tuples',
  url: 'lesson/learnsixteen-Python',
  content: '<hr>ඉස්සෙල්ලාම බලමු පෙළගැස්වීම ගැන.<br>අපි දැන්, සංඛ්‍යා දාපු පොඩි list එකක් හදමු.<br>   <div class="panel panel-default"><div class="panel-body">new = [ 32 , 54 , 22 , 7 , 98 , 1 ]<br>new<br>[ 32 , 54 , 22 , 7 , 98 , 1 ]<br></div></div><br><br><img src="assets/imgs/N16_1.PNG" class="img-responsive" width="60%"><br><br>හරි, දැන් list එකක් හදාගත්තනෙ.<br>දැන් sort කියන method එක පාවිච්චි කරන්න පුළුවන්. මේකෙදි sort() කියන එකේ, වරහන් ඇතුළට මොනවත් දාන්න එපා.<br>හරි, දැන් sort කරපුහම list එක ආරෝහන පිළිවෙළට සැකසෙනව.<br><div class="panel panel-default"><div class="panel-body">new<br>[ 1 , 7 , 22 , 32 , 54 , 98 ] </div></div>හරි නේද?<br><br><img src="assets/imgs/N16_2.PNG" class="img-responsive" width="60%"><br><br>ඒවාගෙම අපිට පුළුවන්, string වුත් පෙළගස්වන්න. ඒක කරන්නෙනම් මෙහෙමයි. ඉස්සල්ල ක්‍රමේට වඩා ටිකක් වෙනස්.<br>sorted() කියන එකේ වරහන් ඇතුළට, අපිට අවශ්‍ය string එක ලියන්න ඕන.<br>ඉන්න මම කරල පෙන්වන්නම්,<br><div class="panel panel-default"><div class="panel-body">sorted( ‘Easyhoss’ )<br>[  ‘E’ ,  ‘a’ , ‘h’ , ‘o’ , ‘s’ , ’s’ , ’y’]<br></div></div><br><br><img src="assets/imgs/N16_3.PNG" class="img-responsive" width="60%"><br><br>දැන් මේක අකාරාදී පිළිවෙළටයි (Alphabetical Order) සැකසිලයි තියෙන්නේ. Python වල හැටියට අකාරාදී පිළිවෙළට සකසන්න, ඉස්සෙල්ලාම ගන්නෙ Capital අකුරු, ඒ නිසයි ‘ E ’ ඉස්සරහටම ඇවිත් තියෙන්නෙ, ඊට පස්සේ පිළිවෙළට Simple අකුරු පෙළගැස්සිල තියෙනව, ඔයාට පේනව ඇති.<br>මම දැන් methods වලින් ටිකක් අයින් වෙලා, tuples ගැන කියල දෙන්නම් ඔයාට.<br>ඉස්සෙල්ලාම tuple එකක් පෙන්නලාම ඉන්නම්කො.<br>නිකම්ම,  41,42,32,54 කියල, IDLE එකේ Enter කරොත්, අපිට tuple එකක් ලැබෙනව.<br><br><img src="assets/imgs/N16_4.PNG" class="img-responsive" width="60%"><br><br>tuple වලින් ලොකු වැඩකෑලි දාන්න බෑ, list වලදි වගේ.<br>ඇත්තටම කිව්වොත් මේකෙ තියන අවයව ආය වෙනස් කරන්න, අලුත් කරන්න, අයින් කරන්න මොනවත්ම කරගන්න දෙන්නෙ නැ.<br>කරන්න පුළුවන් එකම දෙයයි.<br>ඒකෙ තියෙන අවයවයන් එළියට output කරගැනීම පමණයි.<br>ඉන්න ඒක පෙන්නනම්,<br><div class="panel panel-default"><div class="panel-body">bucky = ( 32 , 32 , 43 , 54 )<br>bucky<br>( 32 , 32 , 43 , 54 )<br></div></div><br><br><img src="assets/imgs/N16_5.PNG" class="img-responsive" width="60%"><br><br>හරි මේක tuple එකක්.<br>දැන් මේකෙ අගයන් එළියට අරන් පෙන්වන්නම්.<br>   <div class="panel panel-default"><div class="panel-body">bucky[2]<br>43<br></div></div><br><br><img src="assets/imgs/N16_6.PNG" class="img-responsive" width="60%"><br><br>ඔයාට දැන් තේරෙනව ඇති, tuple ගැන.<br>හොදට මතක තියාගන්න, tuple වලින් කරන්න පුළුවන්, අගයන් එළියට ගැනීම පමණයි.<br>ඉතින් අන්තිමට සාරාංශයක් විදිහට ගත්තොත් පෙළගැස්වීම(sort), අපට ගොඩක් වටින දෙයක් programmes ලියන කොට.<br>ඒවාගෙම අපි දන්නව, list එකක අවයව වාගෙම, sting එකක අවයවද ලේසියෙන්ම පෙළගැස්වීමට හැකි බව.<br><hr>',
},
{
  id: 17,
  title: ' <h2>17. Stings and Stuff ( වදන් ආශ්‍රිත මෙවලම්)</h2>',
  Navtitle: 'Stings and Stuff',
  url: 'lesson/learnseventeen-Python',
  content: '<hr>Stings වලට අදාල අලුත් ආකර්ෂණීය දේවල් ටිකක් මම දැන් කියල දෙන්නම්,<br>මේක දිහා පොඩ්ඩක් බලන්න,<br>  <div class="panel panel-default"><div class="panel-body">bucky= “ Hey there bucky , hows your head ”<br></div></div><br><br><img src="assets/imgs/N17_1.PNG" class="img-responsive" width="60%"><br><br>මේකෙ තියන bucky, head කියන වචන, අපිට එක එක වෙලාවට ක්ෂණිකව වෙනස් කරගන්න ඕන වගේ කියල හිතන්නකො.<br>ඒත් ඇත්තට අපි කොහොමද ඒක කරන්නෙ?<br>  <div class="panel panel-default"><div class="panel-body">bucky = “ Hey there %s , hows your %s  ”<br></div></div>%s මොකද්ද මේ? ඇත්තටම මේක මාරම ලස්සන දෙයක්, ඒකෙ s වලින් කියවෙන්නෙ String කියලයි. % කියවෙන්නේ මොන විදිහෙ data එකක්ද? යන්නයි.<br>ඇත්තටම කිව්වොත් %s කියන්නේ String සහිත විචල්‍යයක් (String variable) , ඒ කියන්නේ වෙනස් කරන්න පුළුවන් හෝ වෙනස් වෙන දෙයක්.<br>ඉතින් bucky , String එකෙයි, ඕකෙයි ඇති සම්බන්ධය මොකක්ද?<br><br><img src="assets/imgs/N17_2.PNG" class="img-responsive" width="60%"><br><br>අපිට දැන් ඕන පොඩි අගයන්(වචන) 2ක්. මම දැන් ඒ 2කත් ලෑස්ති කරනවා.<br>  <div class="panel panel-default"><div class="panel-body">varb = ( ‘betty’ , ‘foot’ ) <br></div></div>හරි, අපට දැන් තියෙනව, String එකක්, අගයන්(වචන) 2ක් සහිත.<br><br><img src="assets/imgs/N17_3.PNG" class="img-responsive" width="60%"><br><br>දැන් මම පෙන්වන්නම්,<br>bucky හා varb කියන දෙකේ ලස්සන සම්බන්ධතාවයක්.<br>ඒක කරන්නේ මෙහෙමයි.<br>  <div class="panel panel-default"><div class="panel-body">print bucky%varb<br></div></div>මේකෙ තේරුම තමයි, varb කියන එකෙන්, අගයන් අරගන bucky කියන එකේ, % සහිත තැන් වලට, එම අගයන් ආදේෂ කරන්න කියලයි.<br>දැන් Enter එක ඔබල බැලුවොත් ඔයාට ඒක තේරෙයි.<br>  <div class="panel panel-default"><div class="panel-body">Hey there betty, hows your foot<br></div></div><br><br><img src="assets/imgs/17_4.PNG" class="img-responsive" width="60%"><br><br><hr>ඉතින් මේවාගෙම,<br><div class="panel panel-default"><div class="panel-body">varc = ( ‘tuna’ , ’fin’ )<br>print bucky%varc<br>Hey there tuna, hows your fin<br></div></div><br><br><img src="assets/imgs/N17_4.PNG" class="img-responsive" width="60%"><br><br>ඉතින් මේ ක්‍රමේ පාවිච්චි කරල, අපිට පුළුවන් අමුතු විදිහෙ programmes ලියන්න.<br>උදාහරණයක් විදිහට, එකේක පුද්ගලයින් අමතන්න, අපට වෙනස් විදිහෙ වචන set කරල, ඒ ගොල්ලන්ව පුදුම කරන්න පුළුවන්.<br><hr>දැන් මම කියල දෙන්නම්, find කියන method එක ගැන.<br><div class="panel panel-default"><div class="panel-body">example = ” Hey now Bessie nice chops ”<br></div></div><br><br><img src="assets/imgs/N17_5.PNG" class="img-responsive" width="60%"><br><br>අපි හිතමු, අපිට ඕන වෙනව මේකෙ තියෙන වචනයක් හරියටම තියෙන ස්ථානය හොයාගන්න.<br>ඒක කරන්නෙ මෙහෙමයි.<br><div class="panel panel-default"><div class="panel-body">example.find(‘bessie’) <br>8<br></div></div><br><br><img src="assets/imgs/N17_6.PNG" class="img-responsive" width="60%"><br><br>අපිට 8 කියල ආවනේද? ඒකෙ ඇත්තම තේරුම මොකක්ද?<br>ඒකෙන් කියන්නෙ මේකයි. මේ String එකේ කීවෙනි තැනද (කුමන index එකද) <br>bessie කියන වචනෙ ( ‘b’ අකුර සඳහන් තැන) පටන් ගන්නෙ කියලයි.<br><div class="panel panel-default"><div class="panel-body">‘Hey now bessie nice chops’<br>0123456789……………………....<br></div></div>හොදට මතක තියාගන්න, හිස්තැනුත් අනිවාර්යයෙන්ම මේ ගණනය කිරීමට ගන්නව.<br>තව එකක් බලමු.<br>  <div class="panel panel-default"><div class="panel-body">example.find(‘chops’)<br>20<br></div></div><br><br><img src="assets/imgs/N17_7.PNG" class="img-responsive" width="60%"><br><br>මේකට අනුව අපිට හිතාගන්න පුළුවන් ‘ c ’ කියන අකුරට අදාල index එක 20 යි කියල.<br>',
},
{
  id: 18,
  title: '<h2>18. String Methods ( වදන් ආශ්‍රිත රීති තවදුරටත් )</h2>',
  Navtitle: 'String Methods',
  url: 'lesson/learneighteen-Python',
  content: '<hr>String වලට සම්බන්ධ තවත් ලස්සන method එකක් ගැන මම කියල දෙන්නම්. ඒක අපි හදුන්වන්නෙ join කියල.<br>Sequence = [ ‘hey’ , ‘there’ , ‘bessie’ , ‘hoss’ ]<br>Sequence<br>[ ‘hey’ , ‘there’ , ‘bessie’ , ‘hoss’ ]<br>	හරි, දැන් String එකක් හැදුව මම.<br><br><img src="assets/imgs/N18_1.PNG" class="img-responsive" width="60%"><br><br>තවත් පොඩි String එකකුත් හදමු.<br><div class="panel panel-default"><div class="panel-body">glue = ‘hoss’<br></div></div>මේ දෙක අපිට එකට set කරන්න ඕන. ඒක කරන්නෙ මෙහෙමයි. ඉස්සෙල්ලාම list එකේ, හැම අවයවයකම මැදට දාන්න ඕන වචනයට අදාල නම ලියන්න ඕන. ඊට පස්සේ තිතක් තියල join කියල ලියන්න. ඊටත් පස්සේ වරහන් තුළ අර අදාල Sequence එකේ නම ලියන්න.<br><div class="panel panel-default"><div class="panel-body">glue.join(sequence)<br>‘heyhosstherehossbessiehosshosshoss’<br></div></div><br><br><img src="assets/imgs/N18_2.PNG" class="img-responsive" width="60%"><br><br><hr>තවත් වැදගත් method එකක් ගැන දැන් මම කියල දෙන්නම්.<br>ඉස්සෙල්ලාම String එකක් හදමු.<br><div class="panel panel-default"><div class="panel-body">randstr = “I wish i Had No sausage”<br>randstr <br>“I wish i Had No sausage”<br></div></div><br><br><img src="assets/imgs/N18_3.PNG" class="img-responsive" width="60%"><br><br>මට දැන් අවශ්‍යයි, මේකෙ තියෙන හැම අකුරම Simple අකුරු වලට පරිවර්තනය කරන්න.ඒක හරිම ලේසියි.<br><div class="panel panel-default"><div class="panel-body">randstr.lower()</div></div> දැන් Enter එක ඔබල බලමු.<br><div class="panel panel-default"><div class="panel-body">‘i wish i had no sausage’<br></div></div><br><br><img src="assets/imgs/N18_4.PNG" class="img-responsive" width="60%"><br><br>ඔයාට දැන් තේරෙනව ඇති මේ method එකේ තියෙන වැදගත්කම.<br>තව දෙයක් මම කියල දෙන්නම්,<br><hr>අලුත් String එකක් හදමු.<br><div class="panel panel-default"><div class="panel-body">truth = ‘ I love old women ’<br></div></div><br><br><img src="assets/imgs/N18_5.PNG" class="img-responsive" width="60%"><br><br>මම කෙලින්ම method එක ලියල ඉන්නම්.<br><div class="panel panel-default"><div class="panel-body">truth.replace(‘women’ , ’men’)<br></div></div>මේකෙදි ඇත්තටම වෙන්නේ women කියන වචනය වෙනුවට men කියන වචනය ආදේෂ වීමයි. <br>අපි ඒක check කරල බලමු.<br>වැඩේ හරි නේද? ඉතින් මේ විදිහට, යම් වචනයක් වෙනුවට වෙනත් වචනයක් ලේසියෙන්ම ආදේෂ කරගන්න පුළුවන්.<br><br><img src="assets/imgs/N18_6.PNG" class="img-responsive" width="60%"><br><br>',
},
{
  id: 19,
  title: ' <h2>19. Dictionary (වදන් කෝෂ)</h2>',
  Navtitle: 'Dictionary',
  url: 'lesson/learnnineteen-Python',
  content: '<hr>මම දැන් කියල දෙන්න යන්නේ python වල තියෙන Dictionary ගැන. මොකක්ද Dictionary එකක් කියන්නේ?<br>ඇත්තටම මේක අපි දන්න Dictionary එකක් වගේම තමයි. Dictionary එකෙන්, අපි වචනයක් හොයනව කියමුකො, ඒ වචනෙ තියෙන තැනත් හම්බ වුනා. ඉතින් දැන් ඒ වචනෙට අදාල තේරුමක් හෝ විස්තරයක් අපිට දැකගන්න පුළුවන්.<br><hr>ඉතින් python වල තියෙන Dictionary ත් ඒ වාගෙම තමයි. අපි හොයන වචනෙ වාගෙ දේට <b>යතුර(key)</b> කියල කියනව. ඒ වචනයට අදාල විස්තරය, <b>අගය(value)</b> කියල අපි කියනව.<br>මතක තියාගන්න දෙයක් තියෙනව, Dictionary වලට පාවිච්චි වෙන්නේ, <b>වක්‍ර වූ වරහන්( “{…..}” )</b>. පටන් ගද්දිත්, අවසන් කරද්දිත්, මේ වක්‍ර වරහන් අපි පාවිච්චි කරනව.<br>මම එකක් හදලම පෙන්වන්නම්. <br><div class="panel panel-default"><div class="panel-body">book={ "Dad": "Bob", "Bro": "Joe", "Mom": "Lisa"}</div></div><br><br><img src="assets/imgs/N19_1.PNG" class="img-responsive" width="60%"><br><br>මේකෙ තියෙන්නේ, පවුලක සාමාජිකයන්ට අදාල පොඩි Dictionary එකක්. මේකෙ තියෙන යතුරු(keys) තමයි, Dad ,Bro, Mom.	 ඒවාට අදාල අගයන්(values) වෙන්නේ, Bob, Joe, Lisa .<br>දැන් Enter එක එබුහම, අපේ Dictionary එක Run වෙනව.<br><div class="panel panel-default"><div class="panel-body">book <br>{ ‘Dad’: ’Bob’, ’Bro’: ’Joe’, ’Mom’: ’Lisa’}</div></div>දැන් අපිට පුළුවන්, අපේ සාමාන්‍ය Dictionary වල තියෙන වැඩේ කරන්න. ඒ කියන්නේ, වචනෙකට අදාල තේරුම හොයාගන්න.<br>ඒක කරන්නෙ මෙහෙමයි.<br>ඉස්සෙල්ලාම Dictionary එකේ නම, ඊට පස්සේ කොටු වරහන් ඇතුලෙ අපට අවශ්‍ය යතුර(key)  සඳහන් කරන්න ඹ්න.<br>ඉන්න මම පෙන්වන්නම්,<br><div class="panel panel-default"><div class="panel-body">book[‘Dad’]<br>‘Bob’<br> book[‘Mom’]<br>‘Lisa’</div></div><br><br><img src="assets/imgs/N19_2.PNG" class="img-responsive" width="80%"><br><br>ඉතින් තවත් දෙයක් තියෙනව, මේ යතුරු(keys) වලට අදාල අගයන්, string වෙන්නම ඹ්නෙ නෑ. අපට numbers උනත් දාගන්න පුළුවන්. ඒ ගැන කියල දෙන්න අපි තවත් පොඩි Dictionary එකක් හදමු.<br><div class="panel panel-default"><div class="panel-body">ages = { ‘Dad’: ’42’,  ’Mom’: ’87’}<br>ages[‘Dad’]<br>42</div></div><br><br><img src="assets/imgs/N19_3.PNG" class="img-responsive" width="60%"><br><br>දැන් දැක්කනෙ, keys වලට අදාල අගයන්, string වෙන්නම අවශ්‍ය නෑ.<br>දැන් මම කියල දෙන්නම්, Dictionary වලට අදාල methods ටිකක්. <br>මම ඒක ලියලම පෙන්වන්නම්. <br>මේක ලියන්න methods ලියන සාමාන්‍ය ආකෘතියටම තමයි[ Sequence.Method(argument) ].<br><div class="panel panel-default"><div class="panel-body">book.clear()</div></div>මේකෙදි මේකයි වෙන්නේ, අපි සදහන් කරල තියෙන Dictionary එකේ සියලුම අගයන් ඉවත් කරල, Dictionary එක හිස් කරල දාන එකයි.<br>Enter එක එබුවොත් දැන් ඒක බලාගන්න පුළුවන්.<br><br><img src="assets/imgs/N19_4.PNG" class="img-responsive" width="60%"><br><br> වැඩේ හරි නේද?<br>තව Method එකක් බලමු.<br><div class="panel panel-default"><div class="panel-body">tuna = ages.copy()</div></div>මේ‍කෙදි , අපට අදාල Dictionary එකක්,<br>වෙනම Dictionary එකක් විදිහට, කොපියක් ගන්න පුළුවන්.<br><br><img src="assets/imgs/N19_5.PNG" class="img-responsive" width="60%"><br><br>අපි නම් කරපු Dictionary එක, tuna කියන අලුත් Dictionary එකකට කොපි වෙල කියල දැන් ඔයාට පේනව ඇති.<br>දැන් මම කියල දෙන්න යන්නේ, ගොඩක්ම වැදගත් Method එකක් ගැන.<br>මේ Method එකෙන් පුළුවන්, අපට අවශ්‍ය Dictionary එකක් ඇතුළෙ අපි සදහන් කරන key එක තියෙනවද නැද්ද කියල හොයාගන්න.<br>ඒක කරන්නේ මෙහෙමයි,<div class="panel panel-default"><div class="panel-body">tuna.has_key(‘Mom’)<br>True<br>tuna.has_key(‘Apples’)<br>False</div></div><br><br><img src="assets/imgs/N19_6.PNG" class="img-responsive" width="60%"><br><br>ඔයාට ඒ ගැන, දැන් තේරෙනව ඇති.<br>අදාල key එක, Dictionary එකේ තියෙනවනම්, True කියල output වෙනව, නැත්නම් False කියල output වෙනව.<br>හරි, අපි Dictionary ගැන ගොඩක් දේවල් කතා කරා. ඒ වගේම Programmes හදද්දි මේ Dictionary අපට ගොඩක් වැදගත් වෙනව.<br>',
},
{
  id: 20,
  title: ' <h2>20. If Statements (if ප්‍රකාශන)</h2>',
  Navtitle: 'If Statements',
  url: 'lesson/learntwenty-Python',
  content: '<hr>අපි මේතාක් දුරට python වල, මූලික දේවල් ගොඩක් ඉගෙනගත්ත. මෙතනින් එහාට මම කියල දෙන්නම්, ක්‍රමලේඛ හදන විදිහ ගැන.<br>හරි අපි වැඩේට බහිමු.<br><hr>IDLE එකෙන් දැනට සමු අරගෙන, මම දැන් යනව new window එකකට. New window එකේ programme එකක් ලියල, ඒක Run කරන්න නම්, අනිවාර්යෙන් ඒක Save කරන්න ඕන.<br>හරි, මම දැන් sting එකක් හදනව.<br><div class="panel panel-default"><div class="panel-body">tuna=”fish”</div></div>If ප්‍රකාශන ගැන, දැන් මම ඔයාට කියල දෙනව. මේකෙන් ගොඩක් දේවල් ලේසියෙන්ම, අපිට කරන්න පුළුවන්.<br>if tuna==”fish”:මේකෙදි මම සමාන ලකුණු දෙකක් යොදාගෙන තියෙනව.<br>මෙතනදි වෙලා තියෙන්නෙ <b>පරීක්ෂාවක්(testing).</b><br>යම් අගයක් පරීක්ෂා කිරීමට අපි සමාන ලකුණු දෙකක් යොදනව. ඒ වාගෙම අ‍පේ ප්‍රකාශන අවසානයට <b>දෙතිත(colon”:”)</b> යොදනව, හොදට මතක තියාගන්න(ගොඩක් වැදගත්).<br>මේ මුළු ප්‍රකාශනේ තේරුම තමයි, ‘’tuna, fish ට සමාන උනොත්’’ කියන එකයි. ඉතින් මේ ප්‍රකාශනය යටතේ, එහෙම උනොත්, අරක කරන්න, මේක කරන්න, කියල අපිට විවිධ වූ විධාන දෙන්න පුළුවන්.<br><div class="panel panel-default"><div class="panel-body">If tuna == ‘’fish’’:<br>Print ‘this is a fish alright’</div></div>දැන් Enter එක ඔබපුහම, මේ ප්‍රකාශනය යටතේ අපිට අවශ්‍ය කරන දේවල් ලියන්න පුළුවන්.<br>හොදට මතක තියාගන්න, දෙතිත දාල Enter එක එබුව ගමන්, එම ප්‍රකාශනය යටතේ තමයි, ඉන්පසු ලියන දේවල් ලියවෙන්නෙ.(indent- පේළිවල සාමාන්‍ය ඉමෙන් ඇතුළට වන සේ ලියවේ.)<br><br><img src="assets/imgs/N20_1.PNG" class="img-responsive" width="60%"><br><br>දැන් මම මේකෙ කියල තියෙන්නේ tuna, fish ට සමාන වන්නේ නම්, ‘this is a fish alright’ කියල print කරන්න කියලයි.<br>දැන් F5 එක ඔබල, මේ programme එක, run කරල බලමු. <br><div class="panel panel-default"><div class="panel-body">‘this is a fish alright’</div></div><br><br><img src="assets/imgs/N20_2.PNG" class="img-responsive" width="60%"><br><br>මේකෙ වුන දේ ගැන මම තව පාරක් කියන්නම්.<br>අපට තියෙනව variable එකක් tuna=”fish” කියල.<br>දැන් අපි පරීක්ෂාවක් කරනව.<br>tuna කියන එක fish ට සමාන වන්නෙ නම්, ‘this is a fish alright’ කියල print කරන්න, එත් ඒකට සමාන නැත්නම්, මොනවත් කරන්න එපා.<br>අපේ programme එක මම දැන් පොඩ්ඩක් වෙනස් කරනව.<br><div class="panel panel-default"><div class="panel-body">tuna=”fish”<br>if tuna == “bass”:<br>print ‘this is a fish alright’<br></div></div><br><br><img src="assets/imgs/N20_3.PNG" class="img-responsive" width="60%"><br><br>දැන් මොකද වෙන්නෙ කියල බලන්න, මේක run කරමු. ඇත්තටම මොනවත් උනේ නෑ.<br><br><img src="assets/imgs/N20_4.PNG" class="img-responsive" width="60%"><br><br><hr>හරි, if ප්‍රකාශන වල මූලික දේ මේක තමයි,<br>අපේ පරීක්ෂාව හරි නම්, අපිට අවශ්‍ය දේවල් ටිකක් කරන්න කියල, විධාන දෙන්න පුළුවන්, ඊට පස්සේ ඒ විධාන run වෙනවා. ඒත් පරීක්ෂාව වැරදි නම්, මොනවත් නොකර ඉන්නව.<br> ඒත් මේක if ප්‍රකාශන ලියන එක විදිහක් විතරයි.<br>',
},
{
  id: 21,
  title: ' <h2>21. Else and elif (Else සහ elif අනුකේතන)</h2>',
  Navtitle: 'Else and elif',
  url: 'lesson/learntwentyone-Python',
  content: '<hr>දැන් මම කියල දෙන්නම්, පරීක්ෂාව වැරදි නම්, අපට අවශ්‍ය විධාන හදාගන්න හැටි. ඒක කරන්නේ else කියන අනුකේතයෙන් ඒ ගැන දැන් බලමු.<br>අපේ කලින් උදාහරණයම <br>මම ඉස්සරහට අරගෙන යනව.<br><div class="panel panel-default"><div class="panel-body">tuna=”fish”<br>if tuna == “bass”:<br>print ‘this is a bass alright’<br>else:<br>print ’I dont know what this is’</div></div><br><br><img src="assets/imgs/N21_1.PNG" class="img-responsive" width="60%"><br><br>හරි, දැන් ‍මේකයි වෙන්නෙ, ඉස්සෙල්ලාම පළමු ප්‍රකාශනේ සත්‍ය නම්, එයට අදාල විධාන ටික ක්‍රියාත්මක කරනව, ඒත් වැරදි නම් ඔව්, එතකොට අපිට දැන් තවත් තේරීමක් තියෙනව. වැරදි නම්, else යටතේ අපිට කරන්න අවශ්‍ය දේල type කරලයි තියෙන්නෙ.<br>දැන් run කරල බලමු.<br>’I dont know what this is’ <br><br><img src="assets/imgs/N21_2.PNG" class="img-responsive" width="60%"><br><br>වැඩේ හරි නේද?<br>අපි, තවත් මෙතනින් ඉස්සරහට යමු. අපි හිතමු, අපිට ගොඩක් පාරවල් සටහන් කරන්න ඕනෙ කියල. පළවෙනියට දෙයක් පරීක්ෂා කරල හරි ගියේ නැත්නම්, තවත් එකක්, එහෙමත් නැත්නම්, තව එකක්, එහෙමත් වුනේ නැත්නම්, තවත් දෙයක්, ඒ වගේ ගොඩක් පාරවල් සටහන් කරන්න අවශ්‍ය නම්, අපි පාවිච්චි කරනව elif කියන අනුකේතනය.<br>මේක හැම වෙලාවෙම දාන්නේ, if ප්‍රකාශනයයි ,else ප්‍රකාශනයයි අතරට වෙන්නයි. elif ඒවා ඕන තරම් අපිට දාන්න පුළුවන්, අපට අවශ්‍යතාවයන් ගොඩක් තියෙනව නම්.<br>හරි,ඒ ගැන බලමු දැන්.<br><div class="panel panel-default"><div class="panel-body">tuna=”fish”<br>if tuna == “bass”:<br>print ‘this is a bass alright’<br>elif fish == “slamon”:<br>print  ”I hope I don’t get SLAMonilla poissnin”<br>elif fish == “tuna”:<br>print ”easy there tuna boat”<br>else:<br>print ’I dont know what this is’</div></div><br><br><img src="assets/imgs/N21_3.PNG" class="img-responsive" width="60%"><br><br>ඉතින්, දැන් මේකෙ වෙන දේ, මම විස්තර කරන්නම්. අපිට තියෙනව tuna=”fish” කියල variable එකක්.<br>ඉස්සෙල්ලාම if tuna == “bass”: කියන ප්‍රකාශනයට යනව ඒක වැරදි.<br>එහෙනම් ඊලඟ ප්‍රකාශනයට යනව, elif fish == “slamon”: ඒකත් වැරදි නේද? එහෙනම් අනිත් එකට පනිනව.<br>elif fish == “tuna”: <br>ආ..... ඒක නම් හරි! ඉතින් දැන්, ඒක යටතේ තියෙන දේවල් ටික run වෙයි. <br>Programme එක run කරල බලමු, මම කියපු දේද වෙන්නෙ කියල.<br>”easy there tuna boat”<br><br><img src="assets/imgs/N21_4.PNG" class="img-responsive" width="60%"><br><br>හරි, අපි හිතපු දේ වුනා නේද?<br>අපි තවත් පොඩි වෙනසක් කරමු.<br> මේ Programme එකේ tuna කියන එක වෙනුවට, trout කියල දාමු.<br>elif fish == “trout”<br><br><img src="assets/imgs/N21_5.PNG" class="img-responsive" width="60%"><br><br>දැන් run කරල බලමු.<br><div class="panel panel-default"><div class="panel-body">’I dont know what this is’</div></div><br><br><img src="assets/imgs/N21_6.PNG" class="img-responsive" width="60%"><br><br>මේ වතාවෙදි වුනේ මේකයි, ප්‍රකාශන එකිනෙක පරීක්ෂා කර කර බැලුව. මොකක්වත් හරි ගියෙ නෑ. ඒ නිසා අන්තිමට else එකට යනව, ඒකෙ තියෙන දේ run කරනව.<br>අන්තිමට,අපිට තේරෙනව, විසඳුමක් නැතිම වුනාම, programme එක, else යටතේ තියෙන දේ කරල අයින් වෙනව.<br>',
},
{
  id: 22,
  title: ' <h2>22. Nesting Statements (අනු-ප්‍රකාශන)</h2>',
  Navtitle: 'Nesting Statements',
  url: 'lesson/learntwentytwo-Python',
  content: '<hr>If ප්‍රකාශන ගැන, මම තවත් දෙයක් කියල දෙන්නම්.<br>ඉස්සෙල්ලාම පොඩි variables ටිකක් හදාගමු<br><div class="panel panel-default"><div class="panel-body">thing = “animal”<br>animal = “cat”</div></div>හරි, If ප්‍රකාශන යටතේ අපිට තවත් if ප්‍රකාශන යොදන්න පුළුවන්. මම කරලම පෙන්වන්නම්.<br><br><img src="assets/imgs/N22_1.PNG" class="img-responsive" width="60%"><br><br>දැන් Run කරල බලමු. <div class="panel panel-default"><div class="panel-body">this is a cat</div></div><br><br><img src="assets/imgs/N22_2.PNG" class="img-responsive" width="60%"><br><br>මෙතනදී වුනේ මේකයි,<br>thing කියන එක animal වලට සමානයි. ඒ නිසා, ඒ යටතේ ඇති විධාන run වෙනව. <br>එතකොට හම්බවෙනව, if animal == ‘cat ’කියල එකක්. <br>අපි හදපු දෙවන variable එක දිහා බලපුහම තේරෙනව, මේ කියන දේ හරි කියල. ඒ නිසා එම ප්‍රකාශනයේ ඇති විධාන run වෙනව. ඒකයි output එක විදිහට this is cat කියල ආවේ.<br>අපි දැන් thing = “house” කියල වෙනස් කරල, programme එක run කරල බලමු.<br><br><img src="assets/imgs/N22_3.PNG" class="img-responsive" width="60%"><br><br><div class="panel panel-default"><div class="panel-body">I don’t know what this is</div></div><br><br><img src="assets/imgs/N22_4.PNG" class="img-responsive" width="60%"><br><br>දැන් ඔයාට තේරෙනව,<br>if thing == “animal”: කියන ප්‍රකාශනය සත්‍ය නොවේ නම්, <b>ඒ යටතේ</b> ඊට පහළින් තියෙන ප්‍රකාශන එතනින් එහාට වැඩ නොකරන බව.<br><hr>ඉතින් මේ විදිහට python ගැන ලියවුනු මාගේ පළමු වන ග්‍රන්ථය අවසන් වෙනව. ඉවරයි කිව්වට මෙතනින් මේ ග්‍රන්ථය ඉවර වෙන්නෙ නැ .<br>මෙම ග්‍රන්ථයේ දෙවන කොටසින්, මම ඔයාට python වල තියෙන, මෙහි සඳහන් සිද්ධාන්ත වලට වඩා තරමක් ගැඹුරු වූ සිද්ධාන්ත ගැන කියල දෙනවා.<br>ඉතින් ඒ දේවල් ඉගෙනගන්න කලින් මෙම ග්‍රන්ථයේ සඳහන්, python වල මූලික දේවල් ගැන නැවත නැවත පුහුණුවෙන්න.<br>මෙම ග්‍රන්ථයේ සඳහන් ක්‍රමශිල්ප පිළිබදව යම්තාක් දැනුමක් ඔබ ලබාගත්තේ නම්, python පිළිබඳව පසුගිය අ.පො.ස(උ.පෙළ) ප්‍රශ්ණ පත්‍ර වල සදහන් ප්‍රශ්න වලින් 60% වත් ඔබට පහසුවෙන් නිවරදි පිළිතුරු සෙවීමට උදව් වනු ඇත.<br>එසේනම් මෙහි දෙවන ග්‍රන්ථයෙන් අප යළි හමුවෙමු.  <br>ඔබට ජය!<br>',
},
{
  id: 23,
  title: '<h2>23. Comparison Operators (සංසන්දන කාරක)</h2>',
  Navtitle: 'Comparison Operators',
  url: 'lesson/learntwentythree-Python',
  content: '<hr>හරි මේ පාඩමේදී අපි කතාකරන්නේ දේවල් සංසන්දනය කරගන්න හැටි. <br>මේ වෙනකොටත් මං ඔයාට කියල දුන්න == ගැන. <br>ඒකෙන් කරන්නේ , <br>එක් දෙයකට සමාන ද? කියල බලන එක. <br>ඉදිරියට යන්කො <pre>9&lt;7<br>False<br><br>9&gt;7<br>True<br><br>9&lt;=9<br>True</pre>සාමාන්‍ය ජීවිතේ මේව දන්න දේවල්. <br>ඒත් != මොකක්ද දන්නවද. <br>! දාපු ගමන් අසමාන ගතියක් එනව. <br>ඒ කිව්වේ, <br>!= තේරුම තමයි අසමාන ද? කියන එක. <br>උදාහරණයක් බලමුකො. <br><pre>9!=3<br>True</pre>හරිනෙ true කියල ආව. <br>මොකද, <br>9 , 3ට අසමාන නිසා. <br><pre>9!=9<br>False</pre>ඒකත් හරි <br>ඉතින් ඔයාට පුලුවන් පහල ඒව test කරල බලන්න.<pre>9!&gt;5<br>9!&lt;5</pre><hr>අපි වෙනම පැත්තකට යමුකො දැන්. <br>List දෙකක් හදාගමු. <pre>one = [21, 22, 23]<br>two = [21, 22, 23]</pre>බැලූබැල්මට මේ list දෙකේ අන්තර්ගතය එකමයි.<br>හරි එහෙනම් == දාල බලමු.<br><pre>one == two<br>true</pre>එළකිරි , වැඩකරා.. <br>හරි වෙන විදිහකට බලමු. <br><pre>one is two.<br>False</pre>ඒ මොකො ?<br>හේතුව is එකෙන් බලන්නෙ එකම obbject එකද කියල , ඒ කියන්නේ ?<br>උදාහරණයකින් බලමු.<br><pre>three = four = [ 3 , 4 , 5 ]<br>three is four<br>true</pre>ඇත්තම කිව්වොත් is එකේදී බලනව අමුවෙන්ම මේ මේකම ද තියෙන්නේ කියල.<br>ඒකයි three = four , true වුනේ.<hr><pre>pizza = "pizzahut"</pre>කලින් ඉගෙනගත්ත දෙයක් මතක් කරමු බලන්න in keyword එක.<pre>"s" in pizza <br>false </pre>හරි false ආවේ ඇයි කියල ඔයාට මීටර් ඇති."pizzahut" කියන එක ඇතුලෙ s අකුරක් නැති නිසා.එහෙනම් තියෙන අකුරක් දාල බලමු.<pre>"p" in pizza<br>true</pre><hr>මෙතනින් එහාට ගිහින් ඔයාට පුලුවන් මේ keywords ,if statement එකත් එක්ක උනත් use කරන්න.<pre>if "p" in pizza:<br>       print "i found p letter in pizza"</pre>හරියට මේ වගේ.',
},
{
  id: 24,
  title: '<h2>24. AND / OR Operators (AND / OR කාරක)</h2>',
  Navtitle: 'AND / OR Operators',
  url: 'lesson/learntwentyfour-Python',
  content: '<hr>හරි මේ පාඩමේදී අපි කතාකරන්නේ දේවල් සංසන්දනය කරගන්න හැටි. <br>මේ වෙනකොටත් මං ඔයාට කියල දුන්න == ගැන. <br>ඒකෙන් කරන්නේ , <br>එක් දෙයකට සමාන ද? කියල බලන එක. <br>ඉදිරියට යන්කො <pre>9&lt;7<br>False<br><br>9&gt;7<br>True<br><br>9&lt;=9<br>True</pre>සාමාන්‍ය ජීවිතේ මේව දන්න දේවල්. <br>ඒත් != මොකක්ද දන්නවද. <br>! දාපු ගමන් අසමාන ගතියක් එනව. <br>ඒ කිව්වේ, <br>!= තේරුම තමයි අසමාන ද? කියන එක. <br>උදාහරණයක් බලමුකො. <br><pre>9!=3<br>True</pre>හරිනෙ true කියල ආව. <br>මොකද, <br>9 , 3ට අසමාන නිසා. <br><pre>9!=9<br>False</pre>ඒකත් හරි <br>ඉතින් ඔයාට පුලුවන් පහල තියෙන ඒව test කරල බලන්න.<pre>9!&gt;5<br>9!&lt;5</pre>අපි වෙනම පැත්තකට යමුකො දැන්. <br>List දෙකක් හදාගමු. <pre>one = [21, 22, 23]<br>two = [21, 22, 23]</pre>බැලූබැල්මට මේ list දෙකේ අන්තර්ගතය එකමයි.<br>හරි එහෙනම් == දාල බලමු.<br><pre>one == two<br>true</pre>එළකිරි , වැඩකරා.. <br>හරි වෙන විදිහකට බලමු. <br><pre>one is two.<br>false</pre>ඒ මොකො ?<br>හේතුව is එකෙන් බලන්නෙ එකම object එකද කියල , ඒ කියන්නේ ?<br>උදාහරණයකින් බලමු.<br><pre>three = four = [ 3 , 4 , 5 ]<br>three is four<br>true</pre>ඇත්තම කිව්වොත් is එකේදී බලනව අමුවෙන්ම මේ මේකම ද තියෙන්නේ කියල.<br>ඒකයි three = four , true වුනේ <br><hr><pre>pizza = "pizzahut"</pre>කලින් ඉගෙනගත්ත දෙයක් මතක් කරමු බලන්න in keyword එක.<pre>"s" in pizza <br>False </pre>හරි false ආවේ ඇයි කියල ඔයාට මීටර් ඇති."pizzahut" කියන එක ඇතුලෙ s අකුරක් නැති නිසා.එහෙනම් තියෙන අකුරක් දාල බලමු.<pre>"p" in pizza<br>true</pre><hr>මෙතනින් එහාට ගිහින් ඔයාට පුලුවන් මේ keywords ,if statement එකත් එක්ක උනත් use කරන්න.<pre>if "p" in pizza:<br>       print "i found p letter in pizza"</pre>හරියට මේ වගේ.',
},
{
  id: 25,
  title: ' <h2>25. For / While Loops(For / While ලූප)</h2>',
  Navtitle: 'For / While Loops',
  url: 'lesson/learntwentyfive-Python',
  content: '<hr>Programming වල තියෙන වැදගත්ම magic එකක් තමයි දැන් අපි බලන්න යන්නෙ.මේවාට අපි කියනව loops කියල. <br>loops වර්ග ගොඩක් තියෙනව.<br> ඒවා වලින් ගොඩක්ම පාවිච්චි වෙන්නෙ for සහ while කියන loops.<br> ඒ නිසා අද අපි ඒ දෙක බලමු.<br> <br>Loops වලින් ඇත්තටම මේකයි වෙන්නෙ. <br>ඔයාගේ program එකේ එකම දේවල් ආය ආය repeat වෙනවනම් අපිට මේව පාවිච්චි කරන්න පුලුවන්. <br>උදාහරණයක් බලමු. <br><pre>print("1")<br>print("2")<br>print("3")<br>print("4")<br>...<br>print("10")<br><br>[output]<br>1<br>2<br>3<br>4<br>...<br>10</pre>හරි ඔය වැඩේම අපිට code line 3 / 4 කින් ලියාගන්න පුලුවන් මේ loops වල උදව්වෙන්. <br><pre>b=1<br>while b&lt;=10:<br>print(b)<br>b+1<br><br>[output]<br>1<br>2<br>3<br>4<br>...<br>10</pre>b = 1 කියල අපි variable එකක් හදාගන්න.<br>ඔය b&lt;=10 කියන්නෙ loop එක වැඩ කරන්න ඕන condition එක.<br>ඒ කියන්නේ ඔය ප්‍රකාශනය සත්‍ය නම් විතරයි ඔය loop එක වැඩ කරන්නෙ. <br><pre>b&lt;=10</pre>අපි කියල තියෙන්නෙ b වල අගය 10ට වඩා කුඩා හෝ සමාන වෙනකල් කියල.<br>හරි ඊට පසුව loop එක යටතේ අපි print b කියල ලියල තියෙනව. <br>ඒ කියන්නෙ b ගේ value එක print කරන්න කියල. <br>ඒත් එක්කම හැම වටයකම b අගය 1කින් වැඩි කරල තියෙනව. ( b+1 ) <br>යම් අවස්ථාවකදී b ගේ අගය 11උන ගමන් b&lt;=10 ප්‍රකාශනය අසත්‍යය වෙනවා. <br>ඊට පස්සේ loop එකෙන් එළියට ගිහිල්ලා program එකේ ඉතිරි codes ටික run වෙනවා. <br><br>හරි අපි දැන් for loop එක ගැන බලමු. <br><pre>gl = ["bread","milk","meat","beef"] </pre>හරි අපි list එකක් හදා ගත්තා. <br>නිකමට හිතන්න අපිට මේකේ තියෙන items, print කරගන්න ඕන. <br>හරි එහෙනම් අපි වැඩේට for loop එක පාවිච්චි කරමු. <br><pre>for food in gl:<br>print "i want "+ food<br><br>[output] <br><br> i want bread <br> i want milk <br>   i want meat <br> i want beef </pre> හරි ලස්සනට items ටික print වුණා නේද. <br>හරි අපි loop එක පැත්තට යං දැන්. මොකක්ද මේ food කියලා කියන්නේ? <br>ඒක නිකන් නමක් අපිට ඕන නමක් එතැන දෙන්න පුළුවන්. <br>ඇත්තටම ඔය වචනයෙන් වෙන්නේ gl, list එක ඇතුලේ තියෙන values වලට පොදු නමක්. <br><pre>print "i want "+ food</pre> කියපුහම පිළිවෙළට හැම වචනයකම list එකේ items එකින් එක food කියන variable එකට සමාන වෙනව. <br>Loops වල basic ම අදහස් තමයි ඕව. <br>ඉදිරියට අපි තවදුරටත් loops ගැන කතා කරමු. <br>',
},
{
  id: 26,
  title: ' <h2>26. Infinite Loops and Break (අනන්ත ලුප සහ බෙදුම)</h2>',
  Navtitle: 'Infinite Loops and Break',
  url: 'lesson/learntwentysix-Python',
  content: '<hr>හරි අපි දැන් බලමු dictionary එකක keys, print කරගන්න විදිය.<br><pre>ages = { ‘dad’: 42 , ‘lisa’: 7 , ‘mom’:48 }<br>for item in age:<br>print item<br><br>[output]<br>dad<br>lisa<br>mom </pre>keys වල තියෙන values උත් අපිට print කරගන්න ඕන උනොත්, මෙන්න මේ විදියට ඒ වැඩේ කරන්න පුළුවන්.<br><pre>for item in ages:<br>print item, ages[item]<br><br>[output]<br>dad 42<br>lisa 7<br>mom 48 </pre> හරි අපි තවත් පැත්තකට යං.<br><pre>while 1:<br>name = raw_input(“Enter name:”)<br>if name==’quit’: break</pre>මේක හරි ලස්සන ප්‍රෝග්‍රෑම් එකක්.<br> මොකද while loop එකේ condition එකට එක(1) දාපුහාම loop එක දිගටම රන් වෙනවා ඉවර වෙන තැන තැනක් නෑ.<br>loop එක ඇතුලේ අපි මෙන්න මෙහෙම දෙයක් කියලා තියෙනවා. <br>user input එකක් අරන්, ඒක name කියන variable එකට save කරගන්න.<br>ඊට පහළින් අපි කියලා තියෙනවා, ඒ variable එක "quit" කියන වචනයට සමාන වුනොත් loop එකෙන් එලියට යන්න කියලා. <br> ඒ වගේම එලියට යාම හඳුන්වන්නේ break කියන keyword එකෙන්. <br> <br>සරලවම මේකයි වෙන්නේ. <br>මේ program එක, අපිට ඕන තරම් inputs දෙනවා. <br>ඒත් user input එක "quit" කියන වචනයට සමාන වුනොත්, loop එකෙන් එළියට යනවා.<br>programming කරද්දී, ලොකු ලොකු software හදද්දි, ඇත්තටම මේ වගේ දේවල් උනත් ගොඩක් වැදගත්.<br>අපි ඉදිරියට යමු...',
},
{
  id: 27,
  title: '<h2>23. Comparison Operators (සංසන්දන කාරක)</h2>',
  Navtitle: 'Comparison Operators',
  url: 'lesson/learntwentyseven-Python',
  content: '<hr>හරි මේ පාඩමේදී අපි කතාකරන්නේ දේවල් සංසන්දනය කරගන්න හැටි. <br>මේ වෙනකොටත් මං ඔයාට කියල දුන්න == ගැන. <br>ඒකෙන් කරන්නේ , <br>එක් දෙයකට සමාන ද? කියල බලන එක. <br>ඉදිරියට යන්කො <pre>9&lt;7<br>False<br><br>9&gt;7<br>True<br><br>9&lt;=9<br>True</pre>සාමාන්‍ය ජීවිතේ මේව දන්න දේවල්. <br>ඒත් != මොකක්ද දන්නවද. <br>! දාපු ගමන් අසමාන ගතියක් එනව. <br>ඒ කිව්වේ, <br>!= තේරුම තමයි අසමාන ද? කියන එක. <br>උදාහරණයක් බලමුකො. <br><pre>9!=3<br>True</pre>හරිනෙ true කියල ආව. <br>මොකද, <br>9 , 3ට අසමාන නිසා. <br><pre>9!=9<br>False</pre>ඒකත් හරි <br>ඉතින් ඔයාට පුලුවන් පහල ඒව test කරල බලන්න.<pre>9!&gt;5<br>9!&lt;5</pre><hr>අපි වෙනම පැත්තකට යමුකො දැන්. <br>List දෙකක් හදාගමු. <pre>one = [21, 22, 23]<br>two = [21, 22, 23]</pre>බැලූබැල්මට මේ list දෙකේ අන්තර්ගතය එකමයි.<br>හරි එහෙනම් == දාල බලමු.<br><pre>one == two<br>true</pre>එළකිරි , වැඩකරා.. <br>හරි වෙන විදිහකට බලමු. <br><pre>one is two.<br>False</pre>ඒ මොකො ?<br>හේතුව is එකෙන් බලන්නෙ එකම obbject එකද කියල , ඒ කියන්නේ ?<br>උදාහරණයකින් බලමු.<br><pre>three = four = [ 3 , 4 , 5 ]<br>three is four<br>true</pre>ඇත්තම කිව්වොත් is එකේදී බලනව අමුවෙන්ම මේ මේකම ද තියෙන්නේ කියල.<br>ඒකයි three = four , true වුනේ.<hr><pre>pizza = "pizzahut"</pre>කලින් ඉගෙනගත්ත දෙයක් මතක් කරමු බලන්න in keyword එක.<pre>"s" in pizza <br>false </pre>හරි false ආවේ ඇයි කියල ඔයාට මීටර් ඇති."pizzahut" කියන එක ඇතුලෙ s අකුරක් නැති නිසා.එහෙනම් තියෙන අකුරක් දාල බලමු.<pre>"p" in pizza<br>true</pre><hr>මෙතනින් එහාට ගිහින් ඔයාට පුලුවන් මේ keywords ,if statement එකත් එක්ක උනත් use කරන්න.<pre>if "p" in pizza:<br>print "i found p letter in pizza"</pre>හරියට මේ වගේ.',
}
];
